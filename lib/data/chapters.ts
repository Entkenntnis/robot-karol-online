// Auto-generated by pack.js - DO NOT EDIT MANUALLY
import { QuestData, OverviewMapData } from '../state/types'
import { deserializeQuestToData } from '../commands/json'

// Define chapter information from meta.json files
const chapterInfo = [
  {
    "id": 10001,
    "dirName": "000-intro",
    "title": "0. Alles ist scheiße",
    "originalTitle": "Alles ist scheiße",
    "requiredCount": 1,
    "description": "# Alles ist scheiße\r\n\r\n_Es klopft an der Tür zu Ellies Garage._\r\n\r\n**Ellie**: Ja?  \r\n**Joel**: Kann ich reinkommen?  \r\n**Ellie**: Ausnahmsweise.\r\n\r\n_Joel mustert Ellie, wie sie mit gerunzelter Stirn über ein aufgeschlagenes Buch gebeugt sitzt, neben ihr ein alter Laptop._\r\n\r\n**Joel**: Hey Kiddo, das Abendessen ist fertig. Was machst du da so verbissen?\r\n\r\n_Ellie stößt ein frustriertes Geräusch aus und schiebt das Buch von sich._\r\n\r\n**Ellie**: Ich versuche, nicht dumm zu sein.  \r\n**Joel** (tritt näher, seine Augen überfliegen den Titel): \"Python für Einsteiger\" ... seit wann interessierst du dich dafür?  \r\n**Ellie** (verschränkt die Arme): Ich dachte, es wäre vielleicht ... nützlich. Stell dir vor, wir könnten Programme schreiben, um die Patrouillen zu planen. Oder das verdammte Inventar zu verwalten, damit wir wissen, wie viele Konservern noch da sind. Aber ich scheitere schon an der allerersten Übung. Es ist alles scheiße!\r\n**Joel**: Hey, hey. Rom wurde auch nicht an einem Tag erbaut. Und dein letzter Kochversuch hat auch nicht auf Anhieb ...  \r\n**Ellie**: Stopp!! Darüber reden wir nicht!  \r\n**Joel**: Okay, okay. Dir scheint das wichtig zu sein. Wie wäre es damit: Nach dem Abendessen setze ich mich einfach zu dir. Du versuchst es nochmal in Ruhe, und ich sorge dafür, dass du das blöde Buch nicht aus dem Fenster wirfst. Manchmal braucht man nur ein zweites Paar Augen daneben. Deal?  \r\n**Ellie** (mit forschen Blick): Du bist immer noch nicht mein Dad ... aber du hilfst mir, versprochen?  \r\n**Joel**: Hab ich dich je in Stich gelassen?\r\n\r\n_Ellie schaut ihn einen Moment lang an. Ein kaum merkliches Lächeln umspielt ihre Lippen. Sie steht auf und streckt sich._\r\n\r\n**Ellie**: Dann zeig mal, ob sich deine Kochkünste verbessert haben. Ich habe plötzlich richtig Hunger.\r\n",
    "image": "/story/ellie0.jpg",
    "quests": [
      {
        "filename": "Begrüßung.json",
        "x": 870,
        "y": 170,
        "id": 147,
        "content": {
          "version": "v1",
          "title": "Fehlersuche",
          "description": "*Nach dem Abendessen in Ellies Garage*\n\n**Joel**: Los geht's.  \n**Ellie**: Die erste Übung ist eigentlich nicht kompliziert. Mit `print()` kann mein Programm sprechen und ich möchte zwei Sachen sagen, das siehst du an den zwei hellblauen Sprechblasen unten. Wenn ich Texte schreiben will, müssen sie mit Anführungszeichen beginnen und enden. Links ist mein Programm, aber es enthält einen Fehler, den ich nicht finde.  \n**Joel**: Was schaust du mich so an? Du bist die Expertin, na los! Finde den Fehler und bringe das Programm zum Laufen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Hallo, Jackson!"
                },
                {
                  "role": "out",
                  "text": "Ich lerne jetzt Programmieren!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "print(\"Hallo, Jackson!\")\nprint(\"Ich lerne jetzt Programmieren!)"
        },
        "deps": [
          10001
        ]
      },
      {
        "filename": "Vorgeschichte.json",
        "deps": [
          147
        ],
        "x": 940,
        "y": 300,
        "id": 165,
        "content": {
          "version": "v1",
          "title": "Vorgeschichte",
          "description": "Das ist eine Bonusaufgabe. Löse sie, um einen Stern zu erhalten.\n\nFinde die drei Fehler im Code und bringe das Programm zum Laufen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Vorgeschichte: Eine Infektion breitet sich über die Welt aus und lässt Menschen zu Zombies mutieren."
                },
                {
                  "role": "out",
                  "text": "Große Teile der Zivilisation gehen unter, die wenigen Menschen kämpfen hart um ihr Überleben."
                },
                {
                  "role": "out",
                  "text": "Jackson ist eine kleine Oase in dieser chaotischen Welt, wo eine Gemeinschaft sich ein Zuhause gebaut hat."
                },
                {
                  "role": "out",
                  "text": "Ellie und Joel (nicht verwandt) kehren nach ihrer großen Reise nach Jackson zurück. Joels Bruder Tommy wohnt hier mit seiner Frau Maria."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "print(\"Vorgeschichte: Eine Infektion breitet sich über die Welt aus und lässt Menschen zu Zombies mutieren.\"\n\nprint\"Große Teile der Zivilisation gehen unter, die wenigen Menschen kämpfen hart um ihr Überleben.\")\n\npint(\"Jackson ist eine kleine Oase in dieser chaotischen Welt, wo eine Gemeinschaft sich ein Zuhause gebaut hat.\")\n\nprint(\"Ellie und Joel (nicht verwandt) kehren nach ihrer großen Reise nach Jackson zurück. Joels Bruder Tommy wohnt hier mit seiner Frau Maria.\")"
        }
      }
    ],
    "x": 930,
    "y": 1520
  },
  {
    "id": 10002,
    "dirName": "010-variablen",
    "title": "1. Glückbringer",
    "originalTitle": "Glückbringer",
    "requiredCount": 2,
    "description": "# Glücksbringer\r\n\r\n_Es ist ein sonniger Nachmittag. Joel schnitzt in seiner Werkstatt an einer kleinen Holzfigur. Die Tür knarrt, Ellie lehnt im Rahmen und wirkt unmotiviert._\r\n\r\n**Joel**: Langer Gesichtsausdruck für einen freien Tag.  \r\n**Ellie**: Dieses Programmier-Ding, es ist so langweilig.  \r\n**Joel**: Langweilig? Dachte, du wärst voll dabei. Hast doch gestern Abend die erste Aufgabe gelöst.  \r\n**Ellie**: Ja schon, aber ... ich verstehe ja, was das Programm tut. Mit `print()` kann ich meinem Programm Dinge sagen lassen. Und mit `input()` kann mein Programm eine Frage stelle und auf die Antwort warten. Es ist wie eine Unterhaltung ... aber mit niemanden. Ich starre auf den Laptop, tippe was ein, und es erscheint wieder Text. Das fühlt sich so leer an!\r\n\r\n_Ellie lässt das Buch achtlos auf den Boden fallen. Joel hört auf zu schnitzen. Er blickt von der halbfertigen Figur in seiner Hand zu Ellie._\r\n\r\n**Joel**: Eine Unterhaltung mit niemanden, sagst du?  \r\n**Ellie**: Soll ich es nochmal lauter für den alten Herrn wiederholen?  \r\n**Joel**: Und was sagt dein Buch dazu? Das lässt dich doch nicht alleine im Regen stehen, oder?  \r\n**Ellie**: Da ist so eine dämliche Zeichnung von einem Roboter drin, nennen sie Karol. Als ob eine Zeichnung ein echter Gesprächspartner wäre.  \r\n**Joel**: Hm, eine Zeichnung. Was, wenn sie nicht nur eine Zeichnung wäre?  \r\n**Ellie**: Wie meinst du das?  \r\n**Joel** (hält den Holzblock hoch): Du hast doch gesagt, du brauchst ein Gegenüber, einen Gesprächspartner. Vielleicht ... schnitze ich dir einen.\r\n\r\n_Ellie ist für einen Moment still. Ihre Augen weiten sich, als der Gedanke bei ihr ankommt._\r\n\r\n**Ellie**: Du ... du würdest mir diese Karol schnitzen?  \r\n**Joel**: Ich versteh das. Es ist schwer, sich für etwas zu begeistern, das man nicht sehen oder anfassen kann. Also machen wir sie echt. Eine Partnerin, die dir zuhört. Und ein kleiner Glücksbringer ... (er lächelt leicht) ... damit du bei der Sache bleibst.  \r\n**Ellie**: In den Comics ... das ist der Moment. Die Origin-Story ... (sie blickt den Holzblock an, als würde sie eine Person ansehen.) ... Du und ich, Kleine. Wir werden Abenteuer erleben.\r\n\r\n_Joel sagt nichts. Er lächelt nur leise in sich hinein, nimmt sein Messer und macht sich wieder an das Schnitzen._\r\n",
    "image": "/story/joel1.jpg",
    "quests": [
      {
        "filename": "a__Flachwitz.json",
        "x": 450,
        "y": 50,
        "id": 149,
        "content": {
          "version": "v1",
          "title": "a) Flachwitz",
          "description": "**Ellie:** Karol, mache dich bereit für den besten Witz der Welt!\n\n---\n\nSchreibe ein Programm, dass Karol einen Witz erzählt, gehe so vor:\n\n1. Stelle die Frage mit `print()`.\n2. Schreibe `input()` und lasse Karol sprechen.\n3. Nutze wieder `print()` für die Pointe.\n4. Und nochmal für das Lachen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie nennt man einen Bumerang, der nicht zurückkommt?"
                },
                {
                  "role": "in",
                  "text": "Weiß ich nicht"
                },
                {
                  "role": "out",
                  "text": "Stock"
                },
                {
                  "role": "out",
                  "text": "Hahahahaha"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      },
      {
        "filename": "b__Papagei.json",
        "x": 610,
        "y": 160,
        "id": 150,
        "content": {
          "version": "v1",
          "title": "b) Papagei",
          "description": "Dein Programm soll die Eingabe von Karol speichern und wieder ausgeben, wie ein Papagei. Dafür benötigst du eine Variable, diese kannst du so anlegen:\n\n```py\nwort = input()\n```\n\nWenn Karol was sagt, ist ihre Antwort jetzt in der Variable `wort` gespeichert.\n\nDu kannst diese Variable wieder ausgeben:\n\n```py\nprint(wort)\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Marmelade"
                },
                {
                  "role": "out",
                  "text": "Marmelade"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Clicker"
                },
                {
                  "role": "out",
                  "text": "Clicker"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Cordyceps"
                },
                {
                  "role": "out",
                  "text": "Cordyceps"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      },
      {
        "filename": "c__Echo.json",
        "x": 740,
        "y": 130,
        "id": 151,
        "content": {
          "version": "v1",
          "title": "c) Echo",
          "description": "Speichere das Wort von Karol in einer Variable und gib es dreimal als Echo aus:\n\n```py\nwort = input()\nprint(wort)\n...\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      }
    ],
    "x": 640,
    "y": 1640
  },
  {
    "id": 10003,
    "dirName": "020-eingabe-ausgabe",
    "title": "2. Maria",
    "originalTitle": "Maria",
    "requiredCount": 2,
    "description": "# Maria\r\n\r\n_Ein paar Tage später, nach dem Ende der Dorfversammlung._\r\n\r\n**Maria**: Na, du fleißige Biene? Schon die Welt gerettet? (sie lehnt sich grinsend über Ellies Schulter)  \r\n**Ellie**: (starrt weiter auf ihren Bildschirm) Sehr witzig.  \r\n**Maria**: Uff, das Gesicht kenne ich. Das ist der 'Ich-werfe-diesen-Computer-gleich-aus-dem-Fenster'-Blick. Komm, ich geb dir einen aus. Limo wie immer?  \r\n**Ellie**: (seufzt, aber ein kleines Lächeln huscht über ihr Gesicht) Ja, bitte.\r\n\r\n_Maria holt sich einen Kaffee und Ellie eine Limonade, sie setzt sich zu Ellie an den Tisch._\r\n\r\n**Maria**: Also, sprich mit mir. Nach deiner großen Ankündigung letztens dachte ich, du wärst nicht mehr zu bremsen.  \r\n**Ellie**: Welche Ankündigung? Die, bei der ich großspurig meinte, ich würde die Probleme des Dorfes mit Code lösen? Ich komme voran, aber es ist so ... langsam. Ich lerne lauter kleine, nutzlose Tricks, aber ich habe keine Ahnung, wie daraus jemals was Nützliches werden soll.  \r\n**Maria**: Nichts ist am Anfang nützlich. Zeig mal her, was ist denn der neuste nutzlose Trick?  \r\n**Ellie**: (dreht den Laptop leicht zu Maria) Schleifen. Damit kann man dem Ding sagen, dass es etwas immer und immer wieder tun soll:\r\n\r\n```py\r\nfor i in range(100):\r\n    print(\"Buh!\")\r\n```\r\n\r\nSiehst du? Hundermal \"Buh!\". Als ob das irgendwem im Lager helfen würde (sie rollt die Augen).  \r\n**Maria**: Okay, verstehe. Und könntest du ihm auch sagen, er soll es nur fünfmal machen, wenn ich das will?  \r\n**Ellie**: Ja klar. Dafür gibt's diesen `input()`-Befehl. Aber das ist auch wieder so eine Sache ... du gibst eine Zahl ein und das ganze Ding stürzt ab, nur weil man diesen dämlichen `int()`-Befehle drumherum packen muss. Ich habe Stunden gebraucht, um das zu kapieren!\r\n\r\n```py\r\nn = int(input())\r\nfor i in range(n):\r\n    print(\"Ha!\")\r\n```\r\n\r\n**Maria**: Und ist es Absicht, dass dieses `print()` da so eingerückt ist?  \r\n**Ellie**: Oh ja, das auch! Das hat auch ewig gedauert. Alle Befehle, die wiederholt werden sollen, müssen eingerückt sein. Dafür gibt es die Tab-Taste. Der Computer ist total stur. Wenn du es vergisst, funktioniert einfach gar nichts mehr.  \r\n**Maria**: Weißt du was? Du findest das vielleicht nutzlos, aber für mich klingt das schon ziemlich mächtig. Du sagst einer Maschine, was sie tun soll, wie oft sie es tun soll und welche Befehle dazugehören.  \r\n**Ellie**: Es fühlt sich aber nicht mächtig an.  \r\n**Maria**: Kopf hoch. Du lernst gerade das Fundament. Gib nicht auf, du bist näher dran, als du denkst!\r\n",
    "image": "/story/maria.jpg",
    "quests": [
      {
        "filename": "a__Schleife.json",
        "x": 250,
        "y": -35,
        "id": 152,
        "content": {
          "version": "v1",
          "title": "a) Schleife",
          "description": "Sage 10 Mal \"Buh!\". Nutze eine Schleife:\n\n```py\nfor i in range(...):\n    ...\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "b__Aufrufer.json",
        "x": 330,
        "y": 130,
        "id": 153,
        "content": {
          "version": "v1",
          "title": "b) Aufrufer",
          "description": "Frage nach der Anzahl der Personen und gib für jede Person eine Nachricht aus.\n\nNutze für die Eingabe `input` und `int`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Personen?"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Personen?"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "c__Beatbox.json",
        "x": 480,
        "y": 160,
        "id": 154,
        "content": {
          "version": "v1",
          "title": "c) Beatbox",
          "description": "Na Karol, mit einer Schleife sollte man doch auch etwas Musik machen können, oder?",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                },
                {
                  "role": "out",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "d__Countdown.json",
        "x": 610,
        "y": 120,
        "id": 155,
        "content": {
          "version": "v1",
          "title": "d) Countdown",
          "description": "Es gibt so viele kleine Tricks. Karol sagt dir eine Zahl, zähle von dieser Zahl runter:\n\n```py\nfor i in range(n):\n    print(n - i)\n```\n\n- Trick 1: Die Variable `i` zählt von 0, 1, 2, ... bis n-1.\n- Trick 2: Mit der Subtraktion `n - 1` wandelst du den Zähler in einen Countdown.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "Fertig!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "9"
                },
                {
                  "role": "out",
                  "text": "8"
                },
                {
                  "role": "out",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "Fertig!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      }
    ],
    "x": 410,
    "y": 1830
  },
  {
    "id": 10004,
    "dirName": "030-bedingte-anweisungen",
    "title": "3. Dart",
    "originalTitle": "Dart",
    "requiredCount": 2,
    "description": "# Dart\r\n\r\n_Abends in der Bar. Es ist der einzige Ort im Dorf, an dem nach Einbruch der Dunkelheit noch ein Generator für Strom sorgt. Ellie sitzt in einer Ecke an ihrem Laptop, die kleine Karol-Figur baumelt am Netzkabel. Tommy und seine Freunde spielen lautstark Dart. Zwischen zwei Runden setzt sich Tommy zu Ellie._\r\n\r\n**Tommy**: Na Ellie, so spät noch am Lernen?  \r\n**Ellie**: (blickt müde auf) Ich wäre gern schon fertig, aber die Sonderschicht wegen der Infizierten hat meinen Zeitplan durcheinandergebracht. Danke nochmal, dass ihr auf uns gewartet habt.  \r\n**Tommy**: Kein Ding, Jackson bleibt standhaft. Wir passen aufeinander auf. (er nickt Richtung Laptop) Apropos, Maria meinte, du bringst der Kiste da Rechnen bei.  \r\n**Ellie**: Sozusagen. Ist aber langweiliger, als es klingt.  \r\n**Tommy**: Langweilig? Ich könnte gerade jemanden gebrauchen, der für uns rechnet. Jim vergisst nach zwei Bier immer die Hälfte der Punkte ...\r\n\r\n_Ellie zuckt mit den Schultern, aber in ihrem Kopf beginnt es zu ratten. Beim Dart fängt man mit 501 Punkten an. Ein fester Startwert. Eine Variable, Punkte abziehen. Eine Subtraktion. Immer und immer wieder ... wie die Schleife, die sie Maria gezeigt hat. Ein Gedanke formt sich._\r\n\r\n**Ellie**: Warte mal ... wie viele Würfe braucht ihr so für ein Spiel?  \r\n**Tommy**: Puh, wenn wir gut sind, vielleicht zwanzig. Wenn wir schlecht sind ... oder viel getrunken haben ... auch mal dreißig oder vierzig.  \r\n**Ellie**: Okay ... okay, ich glaube, ich hab was. (sie beugt sich über die Tastatur und fängt an zu tippen, dabei murmelt sie zu sich) Also, zuerst der Startwert:\r\n\r\n```py\r\npunktzahl = 501\r\nprint(\"Neues Spiel! Start bei 501 Punkten.\")\r\n```\r\n\r\nUnd dann wiederholen wir das Abziehen einfach ... sagen wir, 50 Mal. Das sollte reichen. Das ist diese `for`-Schleife:\r\n\r\n```py\r\nfor i in range(50):\r\n    wurf = int(input())\r\n    punktzahl = punktzahl - wurf\r\n\r\n    print(\"Neue Punktzahl:\")\r\n    print(punktzahl)\r\n```\r\n\r\nDas Programm fragt jetzt immer wieder nach einem Wurf und zieht die Punkte ab. Es merkt sich den aktuellen Stand in der `punktzahl`-Variable. Das ist ... das ist nicht mehr ein dämlicher Trick. Das ist ein Punktezähler! Schau her Tommy, ich habe einen Punktezähler gebaut!  \r\n**Tommy**: (blinzelt, dann bricht ein Lächeln auf seinem Gesicht durch) Wow. Okay, Kiddo. Endlich ein Punktezähler, der mal nicht betrunken oder müde ist.  \r\n**Jim**: Hey Tommy, ich kann euch beide hören!  \r\n**Ellie**: (lehnt sich stolz zurück) Komm, lass mich mal eine Runde mitspielen. Ich will sehen, ob mein Programm funktioniert.\r\n",
    "image": "/story/dart.jpg",
    "quests": [
      {
        "filename": "a__Dart_1.json",
        "x": 180,
        "y": -100,
        "id": 156,
        "content": {
          "version": "v1",
          "title": "a) Dart 1",
          "description": "Bringe die Zeilen in die richtige Reihenfolge:\n\n- `print(punktzahl)`\n- `punktzahl = 501`\n- `wurf = int(input())`\n- `print(\"Neue Runde\")`\n- `punktzahl = punktzahl - wurf`\n",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "17"
                },
                {
                  "role": "out",
                  "text": "484"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "451"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "500"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "b__Dart_2.json",
        "x": 240,
        "y": 50,
        "id": 157,
        "content": {
          "version": "v1",
          "title": "b) Dart 2",
          "description": "Erweitere das Programm von Dart 1 für **drei** Würfe. Nutze `for i in range(...)`.\n\n<details>\n<summary>Vorlage zum Kopieren</summary>\n```py\npunktzahl = 501\nprint(\"Neue Runde\")\nwurf = int(input())\npunktzahl = punktzahl - wurf\nprint(punktzahl)\n```\n</details>",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "16"
                },
                {
                  "role": "out",
                  "text": "485"
                },
                {
                  "role": "in",
                  "text": "25"
                },
                {
                  "role": "out",
                  "text": "460"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "457"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "451"
                },
                {
                  "role": "in",
                  "text": "25"
                },
                {
                  "role": "out",
                  "text": "426"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "376"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "c__Dart_3.json",
        "x": 180,
        "y": 130,
        "id": 158,
        "content": {
          "version": "v1",
          "title": "c) Dart 3",
          "description": "Es ist gar nicht so einfach, die Zahlen schnell zu multiplizieren. Python kann mit dem `*`-Operator genau das übernehmen. Frage Zahl und Faktor ab und gib das Produkt aus.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "17"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "34"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "9"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "13"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "13"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "d__Summe.json",
        "x": 70,
        "y": 170,
        "id": 159,
        "content": {
          "version": "v1",
          "title": "d) Summe",
          "description": "Eine Variable kann für viele Dinge verwendet werden, z.B. auch um die Summe einiger Zahlen zu berechnen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "in",
                  "text": "44"
                },
                {
                  "role": "in",
                  "text": "12"
                },
                {
                  "role": "out",
                  "text": "106"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "15"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "11111"
                },
                {
                  "role": "in",
                  "text": "22222"
                },
                {
                  "role": "in",
                  "text": "33333"
                },
                {
                  "role": "in",
                  "text": "22222"
                },
                {
                  "role": "out",
                  "text": "88888"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      }
    ],
    "x": 100,
    "y": 1980
  },
  {
    "id": 10005,
    "dirName": "040-mathematik",
    "title": "4. Kindergarten",
    "originalTitle": "Kindergarten",
    "requiredCount": 2,
    "description": "# Kindergarten\r\n\r\n_Einige Erzieher sich erkältet, so dass Maria und Ellie heute im Kindergarten aushelfen._\r\n\r\n**Ellie**: Benji, Vanessa, hört auf euch zu streiten! Jeder darf mal mit dem Holz-Dino spielen! (zu Maria gewandt) Wie kannst du so ruhig bleiben?  \r\n**Maria**: Na, Geduld war nie deine Stärke, Ellie, nicht wahr? Manchmal muss man sie einfach machen lassen. Ihre Welt ist zum Glück noch so klein.  \r\n**Vanessa**: Ellie, kannst du mir eine Geschichte erzählen?  \r\n**Ellie**: Ähm (schaut Maria fragend an, sie nickt ihr ermutigend zu) ... ja, klar. Also, es war einmal ein mutiges Mädchen namens ... wie ist dein Name?  \r\n**Vanessa**: Ich heiße Vanessa!  \r\n**Ellie**: Also, es war einmal ein mutiges Mädchen names Vanessa, sie wohnte in einem Schloss aus ...  \r\n**Vanessa**: Zuckerwatte!  \r\n**Ellie**: (amüsiert) Ok, ok. Zuckerwatte! Ein riesiges Schloss aus Zuckerwatte.  \r\n**Maria**: Ich hole für die Kinder schnell was zu trinken, du machst das super!\r\n\r\n_Als Maria nach wenigen Minuten zurückkommt, sitzen die Kinder gespannt um Ellie herum und hören ihrer Geschichte zu. Ellie ist voll in ihrem Element._\r\n\r\n**Ellie**: Und wenn sie nicht gestorben ist, dann lebt das mutige Mädchen bis heute in ihrem Schloss aus Zuckerwatte! Ende.  \r\n**Benji**: Nein, erzähl weiter!  \r\n**Maria**: Kinder, macht mal einen Applaus für Ellie, sie hat das sehr schön erzählt.  \r\n**Ellie**: (die Kinder applaudieren, Ellie wird etwas rot) Nein, nein, das war nichts besonders ...  \r\n**Maria**: Und jetzt holt sich bitte jeder etwas zu trinken!\r\n\r\n_Später am Nachmittag, als die Kinder alle abgeholt sind._\r\n\r\n**Maria**: Danke, das du heute ausgeholfen hast, die Kinder fanden deine Geschichte super. Ich hoffe, ich habe dich nicht zu sehr vom Programmieren abgehalten.  \r\n**Ellie**: Es ist witzig, denn als ich die Geschichte erzählt habe, musste ich tatsächlich an Python denken.  \r\n**Maria**: Wie das?  \r\n**Ellie**: Ich lerne gerade `f-Strings` ...  \r\n**Maria**: f\\* wie dein Lieblingswort?  \r\n**Ellie**: (empört) Hey, nein! `f` wie Format. Damit kann man Vorlagen bauen und in die Lücken Sachen einsetzen. Wie bei der Geschichte für die Kinder. Da hatte ich mir diese Vorlage im Kopf überlegt und die Ideen der Kinder in die Platzhalter eingefügt. Schau mal her, ich habe das mal aufgeschrieben (sie zeigt Maria einen Zettel):\r\n\r\n```py\r\nname = \"Vanessa\"\r\nmaterial = \"Zuckerwatte\"\r\n\r\n# Das f macht aus dem Text eine Vorlage\r\nprint(f\"Vor langer Zeit lebte {name} in einem fernen Land.\")\r\nprint(f\"{name} wohnte in einem Schloss aus {material}.\")\r\n```\r\n\r\nDas `f` macht aus den Anführungszeichen eine Vorlage. Mit den geschweiften Klammern kann ich Variable an die passende Stelle einfügen.\r\n\r\n**Maria**: Das ist ja richtig genial! Und wenn Benji morgen eine Geschichte hören will ...  \r\n**Ellie**: Dann kannst du einfach die Variablen anpassen, hehe. Und siehst du den Hashtag dort? Der ist auch praktisch, damit kann ich im Code kleine Notizen an mich selbst schreiben.  \r\n**Maria**: Du machst wahnsinnige Fortschritte! Also, ich möchte dich nicht länger vom Programmieren fernhalten, den Rest schaff ich alleine, für dich ist jetzt Feierabend!\r\n",
    "image": "/story/sam.jpg",
    "quests": [
      {
        "filename": "UMFRAGE.json",
        "x": 410,
        "y": -115,
        "id": 160,
        "content": {
          "version": "v1",
          "title": "UMFRAGE",
          "description": "Bei dieser Aufgabe geht es nicht um Ellie, sondern mehr um dich. Wie geht es dir beim Lernen? Wie kann ich dir helfen, das Lernen noch besser zu gestalten?\n\nFülle die Umfrage aus, indem du die Variablen auf den passenden Wert setzt. Wenn du fertig bist, klicke auf `Start` und deine Antworten werden eingesendet.",
          "tasks": [
            {
              "title": "Einsenden",
              "start": {
                "dimX": 5,
                "dimY": 5,
                "height": 6,
                "karol": {
                  "x": 0,
                  "y": 0,
                  "dir": "south"
                },
                "bricks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                },
                "marks": {
                  "dimX": 5,
                  "dimY": 5,
                  "offsetX": 0,
                  "offsetY": 0,
                  "data": [
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      true,
                      true,
                      true,
                      true,
                      true
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ]
                  ]
                },
                "blocks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                }
              },
              "target": {
                "dimX": 5,
                "dimY": 5,
                "height": 6,
                "karol": {
                  "x": 0,
                  "y": 0,
                  "dir": "south"
                },
                "bricks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                },
                "marks": {
                  "dimX": 5,
                  "dimY": 5,
                  "offsetX": 0,
                  "offsetY": 0,
                  "data": [
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      true,
                      true,
                      true,
                      true,
                      true
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ]
                  ]
                },
                "blocks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                }
              }
            }
          ],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "__ide_run_client()\n__karol = Robot()\n\nif not isinstance(verbessern, str):\n    __ide_prompt(\"Frage 1: Erwarte einen Text.\", \"OK\")\n    __karol.beenden()\n\nif len(verbessern) == 0:\n    __ide_prompt(\"Bitte trage etwas in Frage 1 ein.\", \"OK\")\n    __ide_exit()\n\n    \nif not isinstance(spaß, str):\n    __ide_prompt(\"Frage 2: Erwarte einen Text.\", \"OK\")\n    __karol.beenden()\n    \nif len(spaß) == 0:\n    __ide_prompt(\"Bitte trage etwas in Frage 2 ein.\", \"OK\")\n    __ide_exit()\n\n\nevent_str = f\"ev_submit_survey2_{verbessern.replace('_', '-')}_{spaß.replace('_', '-')}\"\n\nif len(event_str) >= 999:\n    __ide_prompt(f\"Maximale Länge um {len(event_str) - 998} Zeichen überschritten. Bitte kürze deine Antwort oder sende sie direkt an karol@arrrg.de, danke!\")\n    __karol.beenden()\n\n__ide_submit(event_str)\n\n__karol.schritt(2)\n__karol.linksDrehen()\n\n__ide_prompt(\"Danke für die Teilnahme an der Umfrage!\", \"schließen\")\n__ide_set_progress(True)\n",
          "language": "python-pro",
          "program": "# Frage 1: Würdest du etwas am Python-Lernpfad verbessern?\n# verbessern = \"Schreibe deine Antwort zwischen die Anführungszeichen\"\nverbessern = \"\"\n\n\n# Frage 2: Was gefällt dir am Python-Lernpfad besonders?\n# spaß = \"Schreibe deine Antwort zwischen die Anführungszeichen\"\nspaß = \"\""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "a__Geschichte.json",
        "x": 190,
        "y": 65,
        "id": 161,
        "content": {
          "version": "v1",
          "title": "a) Geschichte",
          "description": "Nutze einen f-String als Vorlage, um unterschiedliche Geschichten zu erzählen:\n\n```py\nprint(f\"Das ist eine Vorlage und {variable} das ist ein Platzhalter\")\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "Bella"
                },
                {
                  "role": "in",
                  "text": "Frankreich"
                },
                {
                  "role": "out",
                  "text": "Bella lebte vor langer Zeit in Frankreich."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "Quinn"
                },
                {
                  "role": "in",
                  "text": "Ägypten"
                },
                {
                  "role": "out",
                  "text": "Quinn lebte vor langer Zeit in Ägypten."
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "Karol"
                },
                {
                  "role": "in",
                  "text": "Karoland"
                },
                {
                  "role": "out",
                  "text": "Karol lebte vor langer Zeit in Karoland."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "b__Einmaleins.json",
        "x": 310,
        "y": 131,
        "id": 162,
        "content": {
          "version": "v1",
          "title": "b) Einmaleins",
          "description": "Hilf den Kindern beim Einmaleins. Nutze f-Strings und für die Multiplikation das Stern Zeichen: \n\n`ergebnis = a * b`",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "3 mal 5 ist 15"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "4 mal 7 ist 28"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "8"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "8 mal 7 ist 56"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "10 mal 10 ist 100"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "c__Bierflaschen_1.json",
        "x": 450,
        "y": 141,
        "id": 163,
        "content": {
          "version": "v1",
          "title": "c) Bierflaschen 1",
          "description": "Eine Strophe aus einem bekannten Kinderlied, natürlich nur mit alkoholfreiem Bier. ",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Flaschen?"
                },
                {
                  "role": "in",
                  "text": "99"
                },
                {
                  "role": "out",
                  "text": "99 Flaschen Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "99 Flaschen Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "98 Flaschen Bier an der Wand."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Flaschen?"
                },
                {
                  "role": "in",
                  "text": "42"
                },
                {
                  "role": "out",
                  "text": "42 Flaschen Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "42 Flaschen Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "41 Flaschen Bier an der Wand."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "d__Bierflaschen_2.json",
        "x": 580,
        "y": 201,
        "deps": [
          163
        ],
        "id": 164,
        "content": {
          "version": "v1",
          "title": "d) Bierflaschen 2",
          "description": "Spiel den Song nun für 7 Strophen. Bringe dafür diese Code-Schnipsel in die richtige Reihenfolge, achte auf eine passende Einrückung:\n\n`print(f\"{i - 1} Flasche(n) Bier an der Wand.\")`\n\n`for i in range(7, 0, -1):`\n\n`print(f\"{i} Flasche(n) Bier an der Wand,\")`\n\n`print(\"Nimm eine runter, reich sie herum,\")`\n\n`    print(\"{i} Flasche(n) Bier.\")`\n\n*Hinweis: range(7, 0, -1) generiert die Zahlenfolge 7, 6, 5, 4, 3, 2, 1.*",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "7 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "7 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "0 Flasche(n) Bier an der Wand."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        }
      }
    ],
    "x": 420,
    "y": 2200
  },
  {
    "id": 10006,
    "dirName": "050-schleifen",
    "title": "5. Streng geheim",
    "originalTitle": "Streng geheim",
    "requiredCount": 1,
    "description": "# Streng geheim\r\n",
    "image": "/story/journal.jpg",
    "quests": [],
    "x": 770,
    "y": 2150
  },
  {
    "id": 10007,
    "dirName": "060-while",
    "title": "6. Morgenappell",
    "originalTitle": "Morgenappell",
    "requiredCount": 1,
    "description": "Hier findest du weitere Bonus-Aufgaben.\r\n",
    "image": "",
    "quests": [],
    "x": 880,
    "y": 2450
  },
  {
    "id": 10008,
    "dirName": "070-def",
    "title": "7. Superhelden",
    "originalTitle": "Superhelden",
    "requiredCount": 1,
    "description": "",
    "image": "",
    "quests": [],
    "x": 730,
    "y": 2730
  },
  {
    "id": 10009,
    "dirName": "080-logik",
    "title": "8. Unwetter",
    "originalTitle": "Unwetter",
    "requiredCount": 1,
    "description": "",
    "image": "",
    "quests": [],
    "x": 380,
    "y": 2570
  },
  {
    "id": 10010,
    "dirName": "999-bonus",
    "title": "9. Neue Wege",
    "originalTitle": "Neue Wege",
    "requiredCount": 1,
    "description": "",
    "image": "",
    "quests": [],
    "x": 180,
    "y": 2850
  }
]

// Generate chaptersMap based on chapter information
export const chaptersMap: {
  [key: number]: OverviewMapData
} = {}

export const chapterOverviewData: {
  title: string
  titleEn: string
  quests: number[]
}[] = []

// Generate chapterQuests based on chapter information
export const chapterQuests: { [key: number]: QuestData } = {}

// Generate chapterData based on chapter information
export const chapterData: { [key: number]: { title: string, description: string, image: string, requiredCount: number } } = {}

// Populate the exported objects
chapterInfo.forEach((chapter) => {
  // Add chapter to chapterData
  chapterData[chapter.id] = {
    title: chapter.title,
    description: chapter.description,
    image: chapter.image,
    requiredCount: chapter.requiredCount,
  }

  // Default chapter position and dependencies
  chaptersMap[chapter.id] = {
    x: chapter.x,
    y: chapter.y,
    deps: chapter.id == 10001 ? []  : [chapter.id - 1],
  }
  
  const title = `${chapter.title}`

  const c = {
    title,
    titleEn: title,
    quests: [] as number[],
  }

  // Add quests from this chapter to chapterQuests
  chapter.quests.forEach((quest) => {
    const questId = quest.id
    chapterQuests[questId] = deserializeQuestToData(quest.content as any)
    chaptersMap[questId] = {
      x: quest.x,
      y: quest.y + chapter.y,
      deps: quest.deps,
      chapter: chapter.id,
    }
    c.quests.push(questId)
  })
  chapterOverviewData.push(c)
})
