// Auto-generated by pack.js - DO NOT EDIT MANUALLY
import { QuestData, OverviewMapData } from '../state/types'
import { deserializeQuestToData } from '../commands/json'

// Define chapter information from meta.json files
const chapterInfo = [
  {
    "id": 10001,
    "dirName": "000-alles-ist-scheiße",
    "title": "0. Alles ist scheiße",
    "originalTitle": "Alles ist scheiße",
    "requiredCount": 1,
    "description": "# Alles ist scheiße\r\n\r\n_Es klopft an der Tür zu Ellies Garage._\r\n\r\n**Ellie**: Ja?  \r\n**Joel**: Kann ich reinkommen?  \r\n**Ellie**: Ausnahmsweise.\r\n\r\n_Joel mustert Ellie, wie sie mit gerunzelter Stirn über ein aufgeschlagenes Buch gebeugt sitzt, neben ihr ein alter Laptop._\r\n\r\n**Joel**: Hey Kiddo, das Abendessen ist fertig. Was machst du da so verbissen?\r\n\r\n_Ellie stößt ein frustriertes Geräusch aus und schiebt das Buch von sich._\r\n\r\n**Ellie**: Ich versuche, nicht dumm zu sein.  \r\n**Joel** (tritt näher, seine Augen überfliegen den Titel): \"Python für Einsteiger\" ... seit wann interessierst du dich dafür?  \r\n**Ellie** (verschränkt die Arme): Ich dachte, es wäre vielleicht ... nützlich. Stell dir vor, wir könnten Programme schreiben, um die Patrouillen zu planen. Oder das verdammte Inventar zu verwalten, damit wir wissen, wie viele Konservern noch da sind. Aber ich scheitere schon an der allerersten Übung. Es ist alles scheiße!\r\n**Joel**: Hey, hey. Rom wurde auch nicht an einem Tag erbaut. Und dein letzter Kochversuch hat auch nicht auf Anhieb ...  \r\n**Ellie**: Stopp!! Darüber reden wir nicht!  \r\n**Joel**: Okay, okay. Dir scheint das wichtig zu sein. Wie wäre es damit: Nach dem Abendessen setze ich mich einfach zu dir. Du versuchst es nochmal in Ruhe, und ich sorge dafür, dass du das blöde Buch nicht aus dem Fenster wirfst. Manchmal braucht man nur ein zweites Paar Augen daneben. Deal?  \r\n**Ellie** (mit forschen Blick): Du bist immer noch nicht mein Dad ... aber du hilfst mir, versprochen?  \r\n**Joel**: Hab ich dich je in Stich gelassen?\r\n\r\n_Ellie schaut ihn einen Moment lang an. Ein kaum merkliches Lächeln umspielt ihre Lippen. Sie steht auf und streckt sich._\r\n\r\n**Ellie**: Dann zeig mal, ob sich deine Kochkünste verbessert haben. Ich habe plötzlich richtig Hunger.\r\n",
    "image": "/story/ellie0.jpg",
    "quests": [
      {
        "filename": "Begrüßung.json",
        "x": 870,
        "y": 170,
        "id": 100,
        "content": {
          "version": "v1",
          "title": "Fehlersuche",
          "description": "*Nach dem Abendessen in Ellies Garage*\n\n**Joel**: Los geht's.  \n**Ellie**: Die erste Übung ist eigentlich nicht kompliziert. Mit `print()` kann mein Programm sprechen und ich möchte zwei Sachen sagen, das siehst du an den zwei hellblauen Sprechblasen unten. Wenn ich Texte schreiben will, müssen sie mit Anführungszeichen beginnen und enden. Links ist mein Programm, aber es enthält einen Fehler, den ich nicht finde.  \n**Joel**: Was schaust du mich so an? Du bist die Expertin, na los! Finde den Fehler und bringe das Programm zum Laufen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Hallo, Jackson!"
                },
                {
                  "role": "out",
                  "text": "Ich lerne jetzt Programmieren!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "print(\"Hallo, Jackson!\")\nprint(\"Ich lerne jetzt Programmieren!)"
        },
        "deps": [
          10001
        ]
      },
      {
        "filename": "Vorgeschichte.json",
        "deps": [
          100
        ],
        "x": 940,
        "y": 300,
        "id": 101,
        "content": {
          "version": "v1",
          "title": "Vorgeschichte",
          "description": "Das ist eine Bonusaufgabe. Löse sie, um einen Stern zu erhalten.\n\nFinde die drei Fehler im Code und bringe das Programm zum Laufen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Vorgeschichte: Eine Infektion breitet sich über die Welt aus und lässt Menschen zu Zombies mutieren."
                },
                {
                  "role": "out",
                  "text": "Große Teile der Zivilisation gehen unter, die wenigen Menschen kämpfen hart um ihr Überleben."
                },
                {
                  "role": "out",
                  "text": "Jackson ist eine kleine Oase in dieser chaotischen Welt, wo eine Gemeinschaft sich ein Zuhause gebaut hat."
                },
                {
                  "role": "out",
                  "text": "Ellie und Joel (nicht verwandt) kehren nach ihrer großen Reise nach Jackson zurück. Joels Bruder Tommy wohnt hier mit seiner Frau Maria."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "print(\"Vorgeschichte: Eine Infektion breitet sich über die Welt aus und lässt Menschen zu Zombies mutieren.\"\n\nprint\"Große Teile der Zivilisation gehen unter, die wenigen Menschen kämpfen hart um ihr Überleben.\")\n\npint(\"Jackson ist eine kleine Oase in dieser chaotischen Welt, wo eine Gemeinschaft sich ein Zuhause gebaut hat.\")\n\nprint(\"Ellie und Joel (nicht verwandt) kehren nach ihrer großen Reise nach Jackson zurück. Joels Bruder Tommy wohnt hier mit seiner Frau Maria.\")"
        }
      }
    ],
    "x": 930,
    "y": 1520
  },
  {
    "id": 10002,
    "dirName": "010-glücksbringer",
    "title": "1. Glückbringer",
    "originalTitle": "Glückbringer",
    "requiredCount": 2,
    "description": "# Glücksbringer\r\n\r\n_Es ist ein sonniger Nachmittag. Joel schnitzt in seiner Werkstatt an einer kleinen Holzfigur. Die Tür knarrt, Ellie lehnt im Rahmen und wirkt unmotiviert._\r\n\r\n**Joel**: Langer Gesichtsausdruck für einen freien Tag.  \r\n**Ellie**: Dieses Programmier-Ding, es ist so langweilig.  \r\n**Joel**: Langweilig? Dachte, du wärst voll dabei. Hast doch gestern Abend die erste Aufgabe gelöst.  \r\n**Ellie**: Ja schon, aber ... ich verstehe ja, was das Programm tut. Mit `print()` kann ich meinem Programm Dinge sagen lassen. Und mit `input()` kann mein Programm eine Frage stelle und auf die Antwort warten. Es ist wie eine Unterhaltung ... aber mit niemanden. Ich starre auf den Laptop, tippe was ein, und es erscheint wieder Text. Das fühlt sich so leer an!\r\n\r\n_Ellie lässt das Buch achtlos auf den Boden fallen. Joel hört auf zu schnitzen. Er blickt von der halbfertigen Figur in seiner Hand zu Ellie._\r\n\r\n**Joel**: Eine Unterhaltung mit niemanden, sagst du?  \r\n**Ellie**: Soll ich es nochmal lauter für den alten Herrn wiederholen?  \r\n**Joel**: Und was sagt dein Buch dazu? Das lässt dich doch nicht alleine im Regen stehen, oder?  \r\n**Ellie**: Da ist so eine dämliche Zeichnung von einem Roboter drin, nennen sie Karol. Als ob eine Zeichnung ein echter Gesprächspartner wäre.  \r\n**Joel**: Hm, eine Zeichnung. Was, wenn sie nicht nur eine Zeichnung wäre?  \r\n**Ellie**: Wie meinst du das?  \r\n**Joel** (hält den Holzblock hoch): Du hast doch gesagt, du brauchst ein Gegenüber, einen Gesprächspartner. Vielleicht ... schnitze ich dir einen.\r\n\r\n_Ellie ist für einen Moment still. Ihre Augen weiten sich, als der Gedanke bei ihr ankommt._\r\n\r\n**Ellie**: Du ... du würdest mir diese Karol schnitzen?  \r\n**Joel**: Ich versteh das. Es ist schwer, sich für etwas zu begeistern, das man nicht sehen oder anfassen kann. Also machen wir sie echt. Eine Partnerin, die dir zuhört. Und ein kleiner Glücksbringer ... (er lächelt leicht) ... damit du bei der Sache bleibst.  \r\n**Ellie**: In den Comics ... das ist der Moment. Die Origin-Story ... (sie blickt den Holzblock an, als würde sie eine Person ansehen.) ... Du und ich, Kleine. Wir werden Abenteuer erleben.\r\n\r\n_Joel sagt nichts. Er lächelt nur leise in sich hinein, nimmt sein Messer und macht sich wieder an das Schnitzen._\r\n",
    "image": "/story/joel1.jpg",
    "quests": [
      {
        "filename": "a__Flachwitz.json",
        "x": 450,
        "y": 50,
        "id": 102,
        "content": {
          "version": "v1",
          "title": "a) Flachwitz",
          "description": "**Ellie:** Karol, mache dich bereit für den besten Witz der Welt!\n\n---\n\nSchreibe ein Programm, dass Karol einen Witz erzählt, gehe so vor:\n\n1. Stelle die Frage mit `print()`.\n2. Schreibe `input()` und lasse Karol sprechen.\n3. Nutze wieder `print()` für die Pointe.\n4. Und nochmal für das Lachen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie nennt man einen Bumerang, der nicht zurückkommt?"
                },
                {
                  "role": "in",
                  "text": "Weiß ich nicht"
                },
                {
                  "role": "out",
                  "text": "Stock"
                },
                {
                  "role": "out",
                  "text": "Haha"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      },
      {
        "filename": "b__Papagei.json",
        "x": 610,
        "y": 160,
        "id": 103,
        "content": {
          "version": "v1",
          "title": "b) Papagei",
          "description": "Dein Programm soll die Eingabe von Karol speichern und wieder ausgeben, wie ein Papagei. Dafür benötigst du eine Variable, diese kannst du so anlegen:\n\n```py\nwort = input()\n```\n\nWenn Karol was sagt, ist ihre Antwort jetzt in der Variable `wort` gespeichert.\n\nDu kannst diese Variable wieder ausgeben:\n\n```py\nprint(wort)\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Marmelade"
                },
                {
                  "role": "out",
                  "text": "Marmelade"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Clicker"
                },
                {
                  "role": "out",
                  "text": "Clicker"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Ich bin ein Papagei."
                },
                {
                  "role": "in",
                  "text": "Cordyceps"
                },
                {
                  "role": "out",
                  "text": "Cordyceps"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      },
      {
        "filename": "c__Echo.json",
        "x": 740,
        "y": 130,
        "id": 104,
        "content": {
          "version": "v1",
          "title": "c) Echo",
          "description": "Speichere das Wort von Karol in einer Variable und gib es dreimal als Echo aus:\n\n```py\nwort = input()\nprint(wort)\n...\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                },
                {
                  "role": "out",
                  "text": "Hallooooooooooo"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                },
                {
                  "role": "out",
                  "text": "Buuuuuuuuuh!"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                },
                {
                  "role": "out",
                  "text": "Na naaa Na na na"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10002
        ]
      }
    ],
    "x": 640,
    "y": 1640
  },
  {
    "id": 10003,
    "dirName": "020-maria",
    "title": "2. Maria",
    "originalTitle": "Maria",
    "requiredCount": 2,
    "description": "# Maria\r\n\r\n_Ein paar Tage später, nach dem Ende der Dorfversammlung._\r\n\r\n**Maria**: Na, du fleißige Biene? Schon die Welt gerettet? (sie lehnt sich grinsend über Ellies Schulter)  \r\n**Ellie**: (starrt weiter auf ihren Bildschirm) Sehr witzig.  \r\n**Maria**: Uff, das Gesicht kenne ich. Das ist der 'Ich-werfe-diesen-Computer-gleich-aus-dem-Fenster'-Blick. Komm, ich geb dir einen aus. Limo wie immer?  \r\n**Ellie**: (seufzt, aber ein kleines Lächeln huscht über ihr Gesicht) Ja, bitte.\r\n\r\n_Maria holt sich einen Kaffee und Ellie eine Limonade, sie setzt sich zu Ellie an den Tisch._\r\n\r\n**Maria**: Also, sprich mit mir. Nach deiner großen Ankündigung letztens dachte ich, du wärst nicht mehr zu bremsen.  \r\n**Ellie**: Welche Ankündigung? Die, bei der ich großspurig meinte, ich würde die Probleme des Dorfes mit Code lösen? Ich komme voran, aber es ist so ... langsam. Ich lerne lauter kleine, nutzlose Tricks, aber ich habe keine Ahnung, wie daraus jemals was Nützliches werden soll.  \r\n**Maria**: Nichts ist am Anfang nützlich. Zeig mal her, was ist denn der neuste nutzlose Trick?  \r\n**Ellie**: (dreht den Laptop leicht zu Maria) Schleifen. Damit kann man dem Ding sagen, dass es etwas immer und immer wieder tun soll:\r\n\r\n```py\r\nfor i in range(100):\r\n    print(\"Buh!\")\r\n```\r\n\r\nSiehst du? Hundermal \"Buh!\". Als ob das irgendwem im Lager helfen würde (sie rollt die Augen).  \r\n**Maria**: Okay, verstehe. Und könntest du ihm auch sagen, er soll es nur fünfmal machen, wenn ich das will?  \r\n**Ellie**: Ja klar. Dafür gibt's diesen `input()`-Befehl. Aber das ist auch wieder so eine Sache ... du gibst eine Zahl ein und das ganze Ding stürzt ab, nur weil man diesen dämlichen `int()`-Befehle drumherum packen muss. Ich habe Stunden gebraucht, um das zu kapieren!\r\n\r\n```py\r\nn = int(input())\r\nfor i in range(n):\r\n    print(\"Ha!\")\r\n```\r\n\r\n**Maria**: Und ist es Absicht, dass dieses `print()` da so eingerückt ist?  \r\n**Ellie**: Oh ja, das auch! Das hat auch ewig gedauert. Alle Befehle, die wiederholt werden sollen, müssen eingerückt sein. Dafür gibt es die Tab-Taste. Der Computer ist total stur. Wenn du es vergisst, funktioniert einfach gar nichts mehr.  \r\n**Maria**: Weißt du was? Du findest das vielleicht nutzlos, aber für mich klingt das schon ziemlich mächtig. Du sagst einer Maschine, was sie tun soll, wie oft sie es tun soll und welche Befehle dazugehören.  \r\n**Ellie**: Es fühlt sich aber nicht mächtig an.  \r\n**Maria**: Kopf hoch. Du lernst gerade das Fundament. Gib nicht auf, du bist näher dran, als du denkst!\r\n",
    "image": "/story/maria.jpg",
    "quests": [
      {
        "filename": "a__Schleife.json",
        "x": 250,
        "y": -35,
        "id": 105,
        "content": {
          "version": "v1",
          "title": "a) Schleife",
          "description": "Sage 10 Mal \"Buh!\". Nutze eine Schleife:\n\n```py\nfor i in range(...):\n    ...\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                },
                {
                  "role": "out",
                  "text": "Buh!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "b__Aufrufer.json",
        "x": 330,
        "y": 130,
        "id": 106,
        "content": {
          "version": "v1",
          "title": "b) Aufrufer",
          "description": "Frage nach der Anzahl der Personen und gib für jede Person eine Nachricht aus.\n\nNutze für die Eingabe `input` und `int`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Personen?"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Personen?"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                },
                {
                  "role": "out",
                  "text": "Nächste Person bitte!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "c__Beatbox.json",
        "x": 480,
        "y": 160,
        "id": 107,
        "content": {
          "version": "v1",
          "title": "c) Beatbox",
          "description": "Na Karol, mit einer Schleife sollte man doch auch etwas Musik machen können, oder?",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                },
                {
                  "role": "out",
                  "text": "Ba dam"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                },
                {
                  "role": "out",
                  "text": "BUM - ts - KA - ts"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Welcher Beat?"
                },
                {
                  "role": "in",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                },
                {
                  "role": "out",
                  "text": "Wie oft?"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                },
                {
                  "role": "out",
                  "text": "ts-ts-ts ts-ts-ts ts-ts-ts ts-ts-ts"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      },
      {
        "filename": "d__Countdown.json",
        "x": 610,
        "y": 120,
        "id": 108,
        "content": {
          "version": "v1",
          "title": "d) Countdown",
          "description": "Es gibt so viele kleine Tricks. Karol sagt dir eine Zahl, zähle von dieser Zahl runter:\n\n```py\nfor i in range(n):\n    print(n - i)\n```\n\n- Trick 1: Die Variable `i` zählt von 0, 1, 2, ... bis n-1.\n- Trick 2: Mit der Subtraktion `n - 1` wandelst du den Zähler in einen Countdown.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "Fertig!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "9"
                },
                {
                  "role": "out",
                  "text": "8"
                },
                {
                  "role": "out",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "Fertig!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10003
        ]
      }
    ],
    "x": 410,
    "y": 1830
  },
  {
    "id": 10004,
    "dirName": "030-dart",
    "title": "3. Dart",
    "originalTitle": "Dart",
    "requiredCount": 2,
    "description": "# Dart\r\n\r\n_Abends in der Bar. Es ist der einzige Ort im Dorf, an dem nach Einbruch der Dunkelheit noch ein Generator für Strom sorgt. Ellie sitzt in einer Ecke an ihrem Laptop, die kleine Karol-Figur baumelt am Netzkabel. Tommy und seine Freunde spielen lautstark Dart. Zwischen zwei Runden setzt sich Tommy zu Ellie._\r\n\r\n**Tommy**: Na Ellie, so spät noch am Lernen?  \r\n**Ellie**: (blickt müde auf) Ich wäre gern schon fertig, aber die Sonderschicht wegen der Infizierten hat meinen Zeitplan durcheinandergebracht. Danke nochmal, dass ihr auf uns gewartet habt.  \r\n**Tommy**: Kein Ding, Jackson bleibt standhaft. Wir passen aufeinander auf. (er nickt Richtung Laptop) Apropos, Maria meinte, du bringst der Kiste da Rechnen bei.  \r\n**Ellie**: Sozusagen. Ist aber langweiliger, als es klingt.  \r\n**Tommy**: Langweilig? Ich könnte gerade jemanden gebrauchen, der für uns rechnet. Jim vergisst nach zwei Bier immer die Hälfte der Punkte ...\r\n\r\n_Ellie zuckt mit den Schultern, aber in ihrem Kopf beginnt es zu ratten. Beim Dart fängt man mit 501 Punkten an. Ein fester Startwert. Eine Variable, Punkte abziehen. Eine Subtraktion. Immer und immer wieder ... wie die Schleife, die sie Maria gezeigt hat. Ein Gedanke formt sich._\r\n\r\n**Ellie**: Warte mal ... wie viele Würfe braucht ihr so für ein Spiel?  \r\n**Tommy**: Puh, wenn wir gut sind, vielleicht zwanzig. Wenn wir schlecht sind ... oder viel getrunken haben ... auch mal dreißig oder vierzig.  \r\n**Ellie**: Okay ... okay, ich glaube, ich hab was. (sie beugt sich über die Tastatur und fängt an zu tippen, dabei murmelt sie zu sich) Also, zuerst der Startwert:\r\n\r\n```py\r\npunktzahl = 501\r\nprint(\"Neues Spiel! Start bei 501 Punkten.\")\r\n```\r\n\r\nUnd dann wiederholen wir das Abziehen einfach ... sagen wir, 50 Mal. Das sollte reichen. Das ist diese `for`-Schleife:\r\n\r\n```py\r\nfor i in range(50):\r\n    wurf = int(input())\r\n    punktzahl = punktzahl - wurf\r\n\r\n    print(\"Neue Punktzahl:\")\r\n    print(punktzahl)\r\n```\r\n\r\nDas Programm fragt jetzt immer wieder nach einem Wurf und zieht die Punkte ab. Es merkt sich den aktuellen Stand in der `punktzahl`-Variable. Das ist ... das ist nicht mehr ein dämlicher Trick. Das ist ein Punktezähler! Schau her Tommy, ich habe einen Punktezähler gebaut!  \r\n**Tommy**: (blinzelt, dann bricht ein Lächeln auf seinem Gesicht durch) Wow. Okay, Kiddo. Endlich ein Punktezähler, der mal nicht betrunken oder müde ist.  \r\n**Jim**: Hey Tommy, ich kann euch beide hören!  \r\n**Ellie**: (lehnt sich stolz zurück) Komm, lass mich mal eine Runde mitspielen. Ich will sehen, ob mein Programm funktioniert.\r\n",
    "image": "/story/dart.jpg",
    "quests": [
      {
        "filename": "a__Dart_1.json",
        "x": 180,
        "y": -100,
        "id": 109,
        "content": {
          "version": "v1",
          "title": "a) Dart 1",
          "description": "Bringe die Zeilen in die richtige Reihenfolge:\n\n- `print(punktzahl)`\n- `punktzahl = 501`\n- `wurf = int(input())`\n- `print(\"Neue Runde\")`\n- `punktzahl = punktzahl - wurf`\n",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "17"
                },
                {
                  "role": "out",
                  "text": "484"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "451"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "500"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "b__Dart_2.json",
        "x": 240,
        "y": 50,
        "id": 110,
        "content": {
          "version": "v1",
          "title": "b) Dart 2",
          "description": "Erweitere das Programm von Dart 1 für **drei** Würfe. Nutze `for i in range(...)`.\n\n<details>\n<summary>Vorlage zum Kopieren</summary>\n```py\npunktzahl = 501\nprint(\"Neue Runde\")\nwurf = int(input())\npunktzahl = punktzahl - wurf\nprint(punktzahl)\n```\n</details>",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "16"
                },
                {
                  "role": "out",
                  "text": "485"
                },
                {
                  "role": "in",
                  "text": "25"
                },
                {
                  "role": "out",
                  "text": "460"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "457"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Neue Runde"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "451"
                },
                {
                  "role": "in",
                  "text": "25"
                },
                {
                  "role": "out",
                  "text": "426"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "376"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "c__Dart_3.json",
        "x": 180,
        "y": 130,
        "id": 111,
        "content": {
          "version": "v1",
          "title": "c) Dart 3",
          "description": "Es ist gar nicht so einfach, die Zahlen schnell zu multiplizieren. Python kann mit dem `*`-Operator genau das übernehmen. Frage Zahl und Faktor ab und gib das Produkt aus.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "17"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "34"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "9"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Zahl:"
                },
                {
                  "role": "in",
                  "text": "13"
                },
                {
                  "role": "out",
                  "text": "Faktor:"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "13"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      },
      {
        "filename": "d__Summe.json",
        "x": 70,
        "y": 170,
        "id": 112,
        "content": {
          "version": "v1",
          "title": "d) Summe",
          "description": "Eine Variable kann für viele Dinge verwendet werden, z.B. auch um die Summe einiger Zahlen zu berechnen.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "in",
                  "text": "44"
                },
                {
                  "role": "in",
                  "text": "12"
                },
                {
                  "role": "out",
                  "text": "106"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "15"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl:"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Zahlen:"
                },
                {
                  "role": "in",
                  "text": "11111"
                },
                {
                  "role": "in",
                  "text": "22222"
                },
                {
                  "role": "in",
                  "text": "33333"
                },
                {
                  "role": "in",
                  "text": "22222"
                },
                {
                  "role": "out",
                  "text": "88888"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10004
        ]
      }
    ],
    "x": 100,
    "y": 1980
  },
  {
    "id": 10005,
    "dirName": "040-kindergarten",
    "title": "4. Kindergarten",
    "originalTitle": "Kindergarten",
    "requiredCount": 2,
    "description": "# Kindergarten\r\n\r\n_Einige Erzieher haben sich erkältet, so dass Maria und Ellie heute im Kindergarten aushelfen._\r\n\r\n**Ellie**: Benji, Vanessa, hört auf euch zu streiten! Jeder darf mal mit dem Holz-Dino spielen! (zu Maria gewandt) Wie kannst du so ruhig bleiben?  \r\n**Maria**: Na, Geduld war nie deine Stärke, Ellie, nicht wahr? Manchmal muss man sie einfach machen lassen. Ihre Welt ist zum Glück noch so klein.  \r\n**Vanessa**: Ellie, kannst du mir eine Geschichte erzählen?  \r\n**Ellie**: Ähm (schaut Maria fragend an, sie nickt ihr ermutigend zu) ... ja, klar. Also, es war einmal ein mutiges Mädchen namens ... wie ist dein Name?  \r\n**Vanessa**: Ich heiße Vanessa!  \r\n**Ellie**: Also, es war einmal ein mutiges Mädchen names Vanessa, sie wohnte in einem Schloss aus ...  \r\n**Vanessa**: Zuckerwatte!  \r\n**Ellie**: (amüsiert) Ok, ok. Zuckerwatte! Ein riesiges Schloss aus Zuckerwatte.  \r\n**Maria**: Ich hole für die Kinder schnell was zu trinken, du machst das super!\r\n\r\n_Als Maria nach wenigen Minuten zurückkommt, sitzen die Kinder gespannt um Ellie herum und hören ihrer Geschichte zu. Ellie ist voll in ihrem Element._\r\n\r\n**Ellie**: Und wenn sie nicht gestorben ist, dann lebt das mutige Mädchen bis heute in ihrem Schloss aus Zuckerwatte! Ende.  \r\n**Benji**: Nein, erzähl weiter!  \r\n**Maria**: Kinder, macht mal einen Applaus für Ellie, sie hat das sehr schön erzählt.  \r\n**Ellie**: (die Kinder applaudieren, Ellie wird etwas rot) Nein, nein, das war nichts besonders ...  \r\n**Maria**: Und jetzt holt sich bitte jeder etwas zu trinken!\r\n\r\n_Später am Nachmittag, als die Kinder alle abgeholt sind._\r\n\r\n**Maria**: Danke, das du heute ausgeholfen hast, die Kinder fanden deine Geschichte super. Ich hoffe, ich habe dich nicht zu sehr vom Programmieren abgehalten.  \r\n**Ellie**: Es ist witzig, denn als ich die Geschichte erzählt habe, musste ich tatsächlich an Python denken.  \r\n**Maria**: Wie das?  \r\n**Ellie**: Ich lerne gerade `f-Strings` ...  \r\n**Maria**: f\\* wie dein Lieblingswort?  \r\n**Ellie**: (empört) Hey, nein! `f` wie Format. Damit kann man Vorlagen bauen und in die Lücken Sachen einsetzen. Wie bei der Geschichte für die Kinder. Da hatte ich mir diese Vorlage im Kopf überlegt und die Ideen der Kinder in die Platzhalter eingefügt. Schau mal her, ich habe das mal aufgeschrieben (sie zeigt Maria einen Zettel):\r\n\r\n```py\r\nname = \"Vanessa\"\r\nmaterial = \"Zuckerwatte\"\r\n\r\n# Das f macht aus dem Text eine Vorlage\r\nprint(f\"Vor langer Zeit lebte {name} in einem fernen Land.\")\r\nprint(f\"{name} wohnte in einem Schloss aus {material}.\")\r\n```\r\n\r\nDas `f` macht aus den Anführungszeichen eine Vorlage. Mit den geschweiften Klammern kann ich Variable an die passende Stelle einfügen.\r\n\r\n**Maria**: Das ist ja richtig genial! Und wenn Benji morgen eine Geschichte hören will ...  \r\n**Ellie**: Dann kannst du einfach die Variablen anpassen, hehe. Und siehst du den Hashtag dort? Der ist auch praktisch, damit kann ich im Code kleine Notizen an mich selbst schreiben.  \r\n**Maria**: Du machst wahnsinnige Fortschritte! Also, ich möchte dich nicht länger vom Programmieren fernhalten, den Rest schaff ich alleine, für dich ist jetzt Feierabend!\r\n",
    "image": "/story/sam.jpg",
    "quests": [
      {
        "filename": "UMFRAGE.json",
        "x": 410,
        "y": -115,
        "id": 113,
        "content": {
          "version": "v1",
          "title": "UMFRAGE",
          "description": "Bei dieser Aufgabe geht es nicht um Ellie, sondern mehr um dich. Wie geht es dir beim Lernen? Wie kann ich dir helfen, das Lernen noch besser zu gestalten?\n\nFülle die Umfrage aus, indem du die Variablen auf den passenden Wert setzt. Wenn du fertig bist, klicke auf `Start` und deine Antworten werden eingesendet.",
          "tasks": [
            {
              "title": "Einsenden",
              "start": {
                "dimX": 5,
                "dimY": 5,
                "height": 6,
                "karol": {
                  "x": 0,
                  "y": 0,
                  "dir": "south"
                },
                "bricks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                },
                "marks": {
                  "dimX": 5,
                  "dimY": 5,
                  "offsetX": 0,
                  "offsetY": 0,
                  "data": [
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      true,
                      true,
                      true,
                      true,
                      true
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ]
                  ]
                },
                "blocks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                }
              },
              "target": {
                "dimX": 5,
                "dimY": 5,
                "height": 6,
                "karol": {
                  "x": 0,
                  "y": 0,
                  "dir": "south"
                },
                "bricks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                },
                "marks": {
                  "dimX": 5,
                  "dimY": 5,
                  "offsetX": 0,
                  "offsetY": 0,
                  "data": [
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      true,
                      true,
                      true,
                      true,
                      true
                    ],
                    [
                      false,
                      false,
                      false,
                      true,
                      false
                    ],
                    [
                      false,
                      false,
                      true,
                      false,
                      false
                    ]
                  ]
                },
                "blocks": {
                  "offsetX": -1,
                  "offsetY": -1,
                  "dimX": 0,
                  "dimY": 0,
                  "data": []
                }
              }
            }
          ],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "__ide_run_client()\n__karol = Robot()\n\nif not isinstance(verbessern, str):\n    __ide_prompt(\"Frage 1: Erwarte einen Text.\", \"OK\")\n    __karol.beenden()\n\nif len(verbessern) == 0:\n    __ide_prompt(\"Bitte trage etwas in Frage 1 ein.\", \"OK\")\n    __ide_exit()\n\n    \nif not isinstance(spaß, str):\n    __ide_prompt(\"Frage 2: Erwarte einen Text.\", \"OK\")\n    __karol.beenden()\n    \nif len(spaß) == 0:\n    __ide_prompt(\"Bitte trage etwas in Frage 2 ein.\", \"OK\")\n    __ide_exit()\n\n\nevent_str = f\"ev_submit_survey2_{verbessern.replace('_', '-')}_{spaß.replace('_', '-')}\"\n\nif len(event_str) >= 999:\n    __ide_prompt(f\"Maximale Länge um {len(event_str) - 998} Zeichen überschritten. Bitte kürze deine Antwort oder sende sie direkt an karol@arrrg.de, danke!\")\n    __karol.beenden()\n\n__ide_submit(event_str)\n\n__karol.schritt(2)\n__karol.linksDrehen()\n\n__ide_prompt(\"Danke für die Teilnahme an der Umfrage!\", \"schließen\")\n__ide_set_progress(True)\n",
          "language": "python-pro",
          "program": "# Frage 1: Würdest du etwas am Python-Lernpfad verbessern?\n# verbessern = \"Schreibe deine Antwort zwischen die Anführungszeichen\"\nverbessern = \"\"\n\n\n# Frage 2: Was gefällt dir am Python-Lernpfad besonders?\n# spaß = \"Schreibe deine Antwort zwischen die Anführungszeichen\"\nspaß = \"\""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "a__Geschichte.json",
        "x": 190,
        "y": 65,
        "id": 114,
        "content": {
          "version": "v1",
          "title": "a) Geschichte",
          "description": "Nutze einen f-String als Vorlage, um unterschiedliche Geschichten zu erzählen:\n\n```py\nprint(f\"Das ist eine Vorlage und {variable} das ist ein Platzhalter\")\n```",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "Bella"
                },
                {
                  "role": "in",
                  "text": "Frankreich"
                },
                {
                  "role": "out",
                  "text": "Bella lebte vor langer Zeit in Frankreich."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "Quinn"
                },
                {
                  "role": "in",
                  "text": "Ägypten"
                },
                {
                  "role": "out",
                  "text": "Quinn lebte vor langer Zeit in Ägypten."
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "Karol"
                },
                {
                  "role": "in",
                  "text": "Karoland"
                },
                {
                  "role": "out",
                  "text": "Karol lebte vor langer Zeit in Karoland."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "b__Einmaleins.json",
        "x": 310,
        "y": 131,
        "id": 115,
        "content": {
          "version": "v1",
          "title": "b) Einmaleins",
          "description": "Hilf den Kindern beim Einmaleins. Nutze f-Strings und für die Multiplikation das Stern Zeichen: \n\n`ergebnis = a * b`",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "3 mal 5 ist 15"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "4 mal 7 ist 28"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "in",
                  "text": "8"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "8 mal 7 ist 56"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "10 mal 10 ist 100"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "c__Bierflaschen_1.json",
        "x": 450,
        "y": 141,
        "id": 116,
        "content": {
          "version": "v1",
          "title": "c) Bierflaschen 1",
          "description": "Eine Strophe aus einem bekannten Kinderlied, natürlich nur mit alkoholfreiem Bier. ",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Flaschen?"
                },
                {
                  "role": "in",
                  "text": "99"
                },
                {
                  "role": "out",
                  "text": "99 Flaschen Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "99 Flaschen Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "98 Flaschen Bier an der Wand."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Flaschen?"
                },
                {
                  "role": "in",
                  "text": "42"
                },
                {
                  "role": "out",
                  "text": "42 Flaschen Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "42 Flaschen Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "41 Flaschen Bier an der Wand."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10005
        ]
      },
      {
        "filename": "d__Bierflaschen_2.json",
        "x": 580,
        "y": 201,
        "deps": [
          116
        ],
        "id": 117,
        "content": {
          "version": "v1",
          "title": "d) Bierflaschen 2",
          "description": "Spiel den Song nun für 7 Strophen. Bringe dafür diese Code-Schnipsel in die richtige Reihenfolge, achte auf eine passende Einrückung:\n\n`print(f\"{i - 1} Flasche(n) Bier an der Wand.\")`\n\n`for i in range(7, 0, -1):`\n\n`print(f\"{i} Flasche(n) Bier an der Wand,\")`\n\n`print(\"Nimm eine runter, reich sie herum,\")`\n\n`    print(f\"{i} Flasche(n) Bier.\")`\n\n*Hinweis: range(7, 0, -1) generiert die Zahlenfolge 7, 6, 5, 4, 3, 2, 1.*",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "7 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "7 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "6 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "5 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "4 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "3 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "2 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier an der Wand."
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier an der Wand,"
                },
                {
                  "role": "out",
                  "text": "1 Flasche(n) Bier."
                },
                {
                  "role": "out",
                  "text": "Nimm eine runter, reich sie herum,"
                },
                {
                  "role": "out",
                  "text": "0 Flasche(n) Bier an der Wand."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        }
      }
    ],
    "x": 420,
    "y": 2200
  },
  {
    "id": 10006,
    "dirName": "050-streng-geheim",
    "title": "5. Streng geheim",
    "originalTitle": "Streng geheim",
    "requiredCount": 3,
    "description": "# Streng geheim\r\n\r\n_Ellie schreibt in ihr Tagebuch._\r\n\r\nIch mache gute Fortschritte beim Programmieren, es ist viel Arbeit, aber es macht Spaß - wenn man es verstanden hat. Manchmal träume ich auch in der Nacht von Python.\r\n\r\nWeißt du, was praktisch wäre? Ein Passwort für das Tagebuch. Ich könnte sowas jetzt programmieren. Dazu gibt es dieses `if/else`. Komm, ich zeige dir, wie das aussieht:\r\n\r\n```py\r\nprint(\"Streng geheim! Passwort:\")\r\npasswort = input()\r\n\r\nif passwort == \"Riley\":\r\n    print(\"Zugang gewährt ✌(-‿-)✌\")\r\nelse:\r\n    print(\"Geh weg! ┌П┐(ಠ_ಠ)\")\r\n```\r\n\r\nAm Anfang war das verwirrend, aber mittlerweile habe ich es besser verstanden. Hinter dem `if` kann ich etwas überprüfen, zum Beispiel ob das Passwort korrekt ist. Ich muss zwei Gleichheitszeichen verwenden, weil es sonst mit der Variable-Zuweisung Verwirrung gibt. Je nach dem, wie die Prüfung läuft, wird entweder der `if`- oder der `else`-Block ausgeführt:\r\n\r\nWenn die <span class=\"text-green-600\">Prüfung bestanden ist</span>, wird der Code direkt nach dem `if` ausgeführt (immer schön mit Tab einrücken, sonst geht alles kaputt).\r\n\r\nWenn die <span class=\"text-red-500\">Prüfung nicht klappt</span>, dann wird nur der Code im `else`-Block ausgeführt.\r\n\r\nIm Buch steht, das ich dadurch sehr intelligente Programme schreiben kann. Na, das werden wir noch sehen. So intelligent sieht das für mich noch nicht aus, aber ich wurde ja schon öfters überrascht.\r\n\r\nRiley, ich vermisse dich.\r\n",
    "image": "/story/journal.jpg",
    "quests": [
      {
        "filename": "a__Passwort.json",
        "x": 620,
        "y": -50,
        "id": 118,
        "content": {
          "version": "v1",
          "title": "a) Passwort",
          "description": "Schreibe ein Python-Programm, dass nach einem Passwort fragt und es überprüft. Nutze `if/else`.\n\nDas korrekte Passwort lautet **trowssaP**.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Passwort?"
                },
                {
                  "role": "in",
                  "text": "Banane"
                },
                {
                  "role": "out",
                  "text": "falsch"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Passwort?"
                },
                {
                  "role": "in",
                  "text": "123"
                },
                {
                  "role": "out",
                  "text": "falsch"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Passwort?"
                },
                {
                  "role": "in",
                  "text": "trowssaP"
                },
                {
                  "role": "out",
                  "text": "Zugriff gewährt"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10006
        ]
      },
      {
        "filename": "b__Kalte_Schulter.json",
        "x": 730,
        "y": -140,
        "id": 119,
        "content": {
          "version": "v1",
          "title": "b) Kalte Schulter",
          "description": "Frage nach dem Namen der Person. Bei Joel antwortet das Programm: \"Verrate mir endlich deinen Plan für meinen Geburtstag.\", bei Maria: \"Ich möchte endlich mit auf Patrouille.\"\n\nBei allen anderen Personen sagt das Programm nichts. Nutze zweimal `if`. Lasse das `else` aus.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wer ist da?"
                },
                {
                  "role": "in",
                  "text": "Joel"
                },
                {
                  "role": "out",
                  "text": "Verrate mir endlich deinen Plan für meinen Geburtstag."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wer ist da?"
                },
                {
                  "role": "in",
                  "text": "Maria"
                },
                {
                  "role": "out",
                  "text": "Ich möchte endlich mit auf Patrouille."
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Wer ist da?"
                },
                {
                  "role": "in",
                  "text": "Albert"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "out",
                  "text": "Wer ist da?"
                },
                {
                  "role": "in",
                  "text": "Nina"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10006
        ]
      },
      {
        "filename": "c__Zahlenraten_1.json",
        "x": 900,
        "y": -100,
        "id": 120,
        "content": {
          "version": "v1",
          "title": "c) Zahlenraten 1",
          "description": "Dein Programm enthält eine geheime Zahl (psst, sie lautet 7). Karol soll diese Zahl raten und du sagst, ob die Zahl zu hoch oder zu niedrig ist. Bringe diese Code-Zeilen in die richtige Reihenfolge:\n\n`geheim = 7`\n\n`if n < geheim:`\n\n`if n > geheim:`\n\n`n = int(input())`\n\n`print(\"Rate meine Zahl\")`\n\n`print(\"zu niedrig\")`\n\n`print(\"zu hoch\")`",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "zu niedrig"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "100"
                },
                {
                  "role": "out",
                  "text": "zu hoch"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "1"
                },
                {
                  "role": "out",
                  "text": "zu niedrig"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "8"
                },
                {
                  "role": "out",
                  "text": "zu hoch"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10006
        ]
      },
      {
        "filename": "d__Zahlenraten_2.json",
        "x": 1000,
        "y": 50,
        "id": 121,
        "content": {
          "version": "v1",
          "title": "d) Zahlenraten 2",
          "description": "Wenn du mehrere Sachen prüfen und nur einen der Fälle ausführen willst, gibt es noch `elif`:\n\n```py\nif ...:\n    ...\nelif ...:\n    ...\nelse:\n    ...\n```\n\nDamit kannst du das Zahlenraten vervollständigen: Wenn die Zahl zu hoch oder zu niedrig ist, gib eine Nachricht aus. Wenn die Zahl aber stimmt, dann sage etwas Nettes. Die geheime Zahl ist wieder 7.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "zu niedrig"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "zu hoch"
                }
              ]
            },
            {
              "title": "Chat 5",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Zahl"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "WOW! MEGA!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10006
        ]
      },
      {
        "filename": "e__Infizierte.json",
        "x": 670,
        "y": 120,
        "id": 122,
        "content": {
          "version": "v1",
          "title": "e) Infizierte",
          "description": "Je nach Dauer durchlaufen die Infizierten verschiedene Phasen:\n\n- 0 - 2 Monate: Runner\n- 3 - 12 Monate: Stalker\n- 13 - 60 Monate: Clicker\n- 60+ Monate: Bloater\n\nFrage die Monate ab und gib eine passende Antwort:",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Monate infiziert?"
                },
                {
                  "role": "in",
                  "text": "0"
                },
                {
                  "role": "out",
                  "text": "Das ist ein Runner."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Monate infiziert?"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Das ist ein Stalker."
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Monate infiziert?"
                },
                {
                  "role": "in",
                  "text": "32"
                },
                {
                  "role": "out",
                  "text": "Das ist ein Clicker."
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "out",
                  "text": "Wie viele Monate infiziert?"
                },
                {
                  "role": "in",
                  "text": "240"
                },
                {
                  "role": "out",
                  "text": "Verstecke dich sofort und bete, dass der Bloater dir einen schnellen Tod bereitet."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10006
        ]
      }
    ],
    "x": 770,
    "y": 2150
  },
  {
    "id": 10007,
    "dirName": "060-arcade",
    "title": "6. Arcade",
    "originalTitle": "Arcade",
    "requiredCount": 2,
    "description": "# Arcade\r\n\r\n_Auszug aus dem Buch \"Python für Einsteiger\"_\r\n\r\nDu brennst darauf, dein erstes eigenes Spiel zu programmieren? Super! Lass uns direkt mit dem Herzstück eines jeden Spiels weitermachen: der **Spiel-Schleife**. Sie sorgt dafür, dass dein Spiel läuft und auf Eingaben reagiert.\r\n\r\nDafür nutzen wir in Python die `while`-Schleife. Sie ist ähnlich aufgebaut wie eine `if`-Abfrage mit einem kleinen Twist: Du gibst ihr eine Bedingung und _solange diese erfüllt ist_, wiederholt sie den Code darin. Zeit für ein kleines Ratespiel!\r\n\r\n```py\r\nprint(\"In welchem Monat habe ich Geburtstag?\")\r\nmonat = \"\"\r\nwhile monat != \"Dezember\":\r\n    monat = input(\"Dein Tipp: \")\r\n\r\nprint(\"Wow, richtig geraten!\")\r\n```\r\n\r\nWenn du das Programm ausführst, könnte es so aussehen:\r\n\r\n```\r\nIn welchem Monat habe ich Geburtstag?\r\nDein Tipp: Januar\r\nDein Tipp: März\r\nDein Tipp: September\r\nDein Tipp: Dezember\r\nWow, richtig geraten!\r\n```\r\n\r\nDie Zeile `monat != \"Dezember\"` ist der Schlüssel. Das `!=` bedeutet \"ungleich\". Die Schleife läuft also, solange die Antwort _falsch_ ist. Ein simpler, aber cleverer Trick! Anders als bei einer `for`-Schleife wissen wir hier nicht, wie viele Runden das Spiel dauern wird.\r\n\r\nFür komplexere Spiele gibt es eine noch flexiblere Methode: die Endlos-Schleife mit `break`.\r\n\r\nKeine Sorge, \"endlos\" klingt, dramatischer, als es ist. Wir bauen einfach einen Notausgang ein. Mit `while True:` erstellen wir eine Schleife, die von sich aus nie endet. Das Kommando `break` dient uns als Schlüssel, um sie an der richtigen Stelle gezielt zu verlassen.\r\n\r\nSo sieht unser Spiel damit aus:\r\n\r\n```py\r\nprint(\"In welchem Monat habe ich Geburtstag?\")\r\nwhile True:\r\n    monat = input(\"Dein Tipp: \")\r\n    if monat == \"Dezember\":\r\n        print(\"Wow, richtig geraten!\")\r\n        break\r\n```\r\n\r\nBisschen einfacher zu lesen, nicht wahr? Und dazu können wir den Code auch leichter erweitern, zum Beispiel mit einem `else`-Block für direktes Feedback:\r\n\r\n```py\r\nprint(\"In welchem Monat habe ich Geburtstag?\")\r\nwhile True:\r\n    monat = input(\"Dein Tipp: \")\r\n    if monat == \"Dezember\":\r\n        print(\"Wow, richtig geraten!\")\r\n        break\r\n    else:\r\n        print(\"Leider falsch, versuch es noch einmal!\")\r\n```\r\n\r\nUnd schon sieht die Ausgabe viel interaktiver aus:\r\n\r\n```\r\nIn welchem Monat habe ich Geburtstag?\r\nDein Tipp: April\r\nLeider falsch, versuch es noch einmal!\r\nDein Tipp: Mai\r\nLeider falsch, versuch es noch einmal!\r\nDein Tipp: Dezember\r\nWow, richtig geraten!\r\n```\r\n\r\nGlückwunsch! Mit diesen wenigen Zeilen hast du bereits eine voll funktionsfähige Spiel-Logik erstellt. Willkommen in der Welt der Spieleentwicklung 🎮 es gibt noch viel zu entdecken!\r\n",
    "image": "/story/arcade.jpg",
    "quests": [
      {
        "filename": "a__Regenbogen_1.json",
        "x": 780,
        "y": -90,
        "id": 123,
        "content": {
          "version": "v1",
          "title": "a) Regenbogen 1",
          "description": "Eine Farbe des Regenbogen ist meine Lieblingsfarbe. Rate sie! Nutze für dein Programm diese Schnipsel:\n\n`print(\"Rate meine Lieblingsfarbe!\")`\n\n`print(\"Richtig!\")`\n\n`while True:`\n\n`break`\n\n`farbe = input()`\n\n`if farbe == \"gelb\":`\n\n",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Lieblingsfarbe!"
                },
                {
                  "role": "in",
                  "text": "türkis"
                },
                {
                  "role": "in",
                  "text": "gelb"
                },
                {
                  "role": "out",
                  "text": "Richtig!"
                }
              ]
            },
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Lieblingsfarbe!"
                },
                {
                  "role": "in",
                  "text": "grün"
                },
                {
                  "role": "in",
                  "text": "pink"
                },
                {
                  "role": "in",
                  "text": "blau"
                },
                {
                  "role": "in",
                  "text": "gelb"
                },
                {
                  "role": "out",
                  "text": "Richtig!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10007
        ]
      },
      {
        "filename": "b__Regenbogen_2.json",
        "x": 1000,
        "y": -60,
        "id": 124,
        "content": {
          "version": "v1",
          "title": "b) Regenbogen 2",
          "description": "Erweitere das Programm von Regenbogen 1 so, dass bei falschen Eingaben jeweils ein Feedback kommt.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Lieblingsfarbe!"
                },
                {
                  "role": "in",
                  "text": "rot"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "orange"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "gelb"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "grün"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "blau"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "violett"
                },
                {
                  "role": "out",
                  "text": "Richtig!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Rate meine Lieblingsfarbe!"
                },
                {
                  "role": "in",
                  "text": "gelb"
                },
                {
                  "role": "out",
                  "text": "Nein"
                },
                {
                  "role": "in",
                  "text": "violett"
                },
                {
                  "role": "out",
                  "text": "Richtig!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10007
        ]
      },
      {
        "filename": "c__Spaßvogel.json",
        "x": 750,
        "y": 90,
        "id": 125,
        "content": {
          "version": "v1",
          "title": "c) Spaßvogel",
          "description": "Wer hat nicht Spaß an ein paar Flachwitzen? Dein Programm ist eine Witzmaschine und sie antwortet auf die Eingaben \"A\", \"B\" und \"C\" mit je einem Witz. Die Eingabe \"x\" beendet dein Programm.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "A, B, C für Witze, x zum Beenden"
                },
                {
                  "role": "in",
                  "text": "A"
                },
                {
                  "role": "out",
                  "text": "Kommt ein Einarmiger in einen Secondhandladen."
                },
                {
                  "role": "in",
                  "text": "x"
                },
                {
                  "role": "out",
                  "text": "Tschüss"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "A, B, C für Witze, x zum Beenden"
                },
                {
                  "role": "in",
                  "text": "B"
                },
                {
                  "role": "out",
                  "text": "Kriegen sich zwei Glatzen in die Haare."
                },
                {
                  "role": "in",
                  "text": "C"
                },
                {
                  "role": "out",
                  "text": "Warum können Skelette schlecht lügen? Weil sie leicht zu durchschauen sind."
                },
                {
                  "role": "in",
                  "text": "x"
                },
                {
                  "role": "out",
                  "text": "Tschüss"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "A, B, C für Witze, x zum Beenden"
                },
                {
                  "role": "in",
                  "text": "B"
                },
                {
                  "role": "out",
                  "text": "Kriegen sich zwei Glatzen in die Haare."
                },
                {
                  "role": "in",
                  "text": "B"
                },
                {
                  "role": "out",
                  "text": "Kriegen sich zwei Glatzen in die Haare."
                },
                {
                  "role": "in",
                  "text": "B"
                },
                {
                  "role": "out",
                  "text": "Kriegen sich zwei Glatzen in die Haare."
                },
                {
                  "role": "in",
                  "text": "x"
                },
                {
                  "role": "out",
                  "text": "Tschüss"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10007
        ]
      },
      {
        "filename": "d__Dart__reloaded_.json",
        "x": 970,
        "y": 110,
        "id": 126,
        "content": {
          "version": "v1",
          "title": "d) Dart (reloaded)",
          "description": "Programmiere einen vollständigen Dart-Punktezähler. Zur Einfachheit startet der Zähler bei 201. Das Spiel muss exakt bei Null enden (siehe Chat 2)",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Spielstart bei 201 Punkten"
                },
                {
                  "role": "in",
                  "text": "40"
                },
                {
                  "role": "out",
                  "text": "Noch 161"
                },
                {
                  "role": "in",
                  "text": "30"
                },
                {
                  "role": "out",
                  "text": "Noch 131"
                },
                {
                  "role": "in",
                  "text": "57"
                },
                {
                  "role": "out",
                  "text": "Noch 74"
                },
                {
                  "role": "in",
                  "text": "25"
                },
                {
                  "role": "out",
                  "text": "Noch 49"
                },
                {
                  "role": "in",
                  "text": "42"
                },
                {
                  "role": "out",
                  "text": "Noch 7"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "Spiel beendet!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Spielstart bei 201 Punkten"
                },
                {
                  "role": "in",
                  "text": "60"
                },
                {
                  "role": "out",
                  "text": "Noch 141"
                },
                {
                  "role": "in",
                  "text": "60"
                },
                {
                  "role": "out",
                  "text": "Noch 81"
                },
                {
                  "role": "in",
                  "text": "60"
                },
                {
                  "role": "out",
                  "text": "Noch 21"
                },
                {
                  "role": "in",
                  "text": "60"
                },
                {
                  "role": "out",
                  "text": "Überworfen!"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "Noch 11"
                },
                {
                  "role": "in",
                  "text": "15"
                },
                {
                  "role": "out",
                  "text": "Überworfen!"
                },
                {
                  "role": "in",
                  "text": "11"
                },
                {
                  "role": "out",
                  "text": "Spiel beendet!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10007
        ]
      }
    ],
    "x": 880,
    "y": 2450
  },
  {
    "id": 10008,
    "dirName": "070-ausflug",
    "title": "7. Hörzu",
    "originalTitle": "Hörzu",
    "requiredCount": 2,
    "description": "# Hörzu\r\n\r\n_Joel und Ellie machen einen Ausflug, auf einer Lichtung im Wald machen sie Pause, in der Böschung sind Rehe zu sehen._\r\n\r\n**Joel**: Es ist schön, wieder rauszukommen.  \r\n**Ellie**: Was du nicht sagst. Jackson ist schön, aber manchmal auch etwas eng.  \r\n**Joel**: Hast du deswegen mit dem Programmieren angefangen?  \r\n**Ellie**: Es ist ... ein guter Zeitvertreib und ich kann mich bisschen nützlich machen. Man muss halt die Sprache lernen, ist wie ein Rätsel.  \r\n**Joel**: Die Sprache ... ach, ich weiß nicht. Da bin ich raus. Ich bleibe lieber bei meiner Sprache, der, die ich verstehe. Beim Bauen von Häusern, das ist mein Element. Bei mir heißt ein Hammer Hammer und ein Nagel Nagel.  \r\n**Ellie**: Ach was, du kannst mit `print` und `input` nicht so viel anfangen?  \r\n**Joel**: Nein, nicht wirklich. Warum heißen die Befehle auch so? Warum nicht `Hörzu` oder `Sprich`? Darunter kann ich mir mehr vorstellen.\r\n\r\n_Ein Reh ist mit ihrer Jungen unterwegs, sie grasen ganz friedlich und lassen sich von Joel und Ellie nicht stören._\r\n\r\n**Ellie**: Weißt du was? Du hast recht. Gute Namen sind wichtig. Das ist beim Programmieren sogar eine total große Sache. Du findest `print` also blöd?  \r\n**Joel**: Ja. Es klingt nicht nach dem, was es tut.  \r\n**Ellie**: Dann ändern wir das eben. Lass mich dir was zeigen, das wird dir gefallen. Und außerdem hilft es mir selbst, das besser zu verstehen.\r\n\r\n_Ellie holt ihr Notizbuch und einen Stift aus ihrem Rucksack._\r\n\r\n**Ellie**: Du kannst in Python deine eigenen Befehle bauen. Man nennt sie Funktionen. Stell es dir wie einen Bauplan vor. Du schreibst den Plan einmal auf und gibst ihm einen Namen, den du gut findest:\r\n\r\n```py\r\ndef Hörzu(sache):\r\n    print(sache)\r\n```\r\n\r\nDas `def` ist wie die Überschrift auf dem Bauplan. Es sagt Python: \"Achtung, hier kommt ein neuer Befehl.\" Und das in der Klammer, die `sache`, ist das Material, das der Bauplan braucht. Wenn jemand zuhören soll, musst du ja auch was sagen. Und dann kommt der Inhalt des Bauplans, in diesem Fall der `print`-Befehl.\r\n\r\nDas Ganze kann ich auch für `Sprich` machen:\r\n\r\n```py\r\ndef Sprich():\r\n    return input()\r\n```\r\n\r\n**Joel**: Das ist schon kompliziert, dieses `def` und `return` und die ganzen Klammern ...  \r\n**Ellie**: Nur beim ersten Mal, beim Erstellen des Bauplans! Aber sobald der Plan fertig ist, musst du ihn nie wieder ansehen. Danach kannst du so programmieren, wie du es für dich besser findest:\r\n\r\n```py\r\nHörzu(\"Kennst du schon den Konstrukto-Meter?\")\r\nSprich()\r\nHörzu(\"Ich erzähle es dir trotzdem! Also, ...\")\r\n```\r\n\r\n**Ellie**: Na, besser?  \r\n**Joel**: Wow, meine eigene Programmiersprache - das ist ziemlich mächtig.  \r\n**Ellie**: Was du nicht sagst!\r\n\r\n_Die Sonne geht am Horizont unter und taucht den Himmel in Abendrot._\r\n\r\n**Joel**: (beiläufig) Nur am Rande, aber wann habe ich dir denn vom Konstrukto-Meter erzählt?  \r\n**Ellie**: JEDER im Dorf kennt das mittlerweile, Joel!  \r\n**Joel**: (lacht leise) Haha, auch wahr.\r\n",
    "image": "/story/ausflug.jpg",
    "quests": [
      {
        "filename": "a__Meine_Sprache_1.json",
        "x": 570,
        "y": 40,
        "id": 127,
        "content": {
          "version": "v1",
          "title": "a) Meine Sprache 1",
          "description": "Schreibe dein Programm, aber anstatt `print` und `input` , nutze meine eigene Sprache mit `blub` und `blab`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Hallo!"
                },
                {
                  "role": "in",
                  "text": "Hi"
                },
                {
                  "role": "out",
                  "text": "Schön hier"
                },
                {
                  "role": "out",
                  "text": "Wirklich schön"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "def blub(text):\n    print(text)\n\n\ndef blab():\n    return input()\n\n\n# TODO: nutze blub und blab\n"
        },
        "deps": [
          10008
        ]
      },
      {
        "filename": "b__Meine_Sprache_2.json",
        "x": 630,
        "y": 180,
        "id": 128,
        "content": {
          "version": "v1",
          "title": "b) Meine Sprache 2",
          "description": "Definiere jetzt eine Sprache mit push und pull. Nutze diese Zeilen:\n\n`def push(text):`\n\n`def pull():`\n\n`return input()`\n\n`print(text)`",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Lalala"
                },
                {
                  "role": "out",
                  "text": "Es ist ein sonniger Tag"
                },
                {
                  "role": "in",
                  "text": "Ja"
                },
                {
                  "role": "out",
                  "text": "Ich mag die Sonne, aber Regen ist auch toll."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "# TODO: definiere push und pull\n\n\n\n\n\n\n# Dieses Programm soll dann funktionieren:\npush(\"Lalala\")\npush(\"Es ist ein sonniger Tag\")\npull()\npush(\"Ich mag die Sonne, aber Regen ist auch toll.\")"
        },
        "deps": [
          10008
        ]
      },
      {
        "filename": "c__Schreiender_Papagei.json",
        "x": 810,
        "y": 130,
        "id": 129,
        "content": {
          "version": "v1",
          "title": "c) Schreiender Papagei",
          "description": "Programmiere nochmal den Papagei, nutze dafür die gegebene Funktion `schreien`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Sprich mit dem schreienden Papagei"
                },
                {
                  "role": "in",
                  "text": "Hallo"
                },
                {
                  "role": "out",
                  "text": "GR HALLO GR GR"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Sprich mit dem schreienden Papagei"
                },
                {
                  "role": "in",
                  "text": "komm her"
                },
                {
                  "role": "out",
                  "text": "GR KOMM HER GR GR"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "def schreien(text):\n    upper = text.upper()\n    print(f\"GR {upper} GR GR\")\n\n# TODO: Programmiere den Papagei"
        },
        "deps": [
          10008
        ]
      },
      {
        "filename": "d__Geometrie.json",
        "x": 930,
        "y": 30,
        "id": 130,
        "content": {
          "version": "v1",
          "title": "d) Geometrie",
          "description": "Implementiere die beiden Funktionen `umfang` und `fläche`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Seite a:"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Seite b:"
                },
                {
                  "role": "in",
                  "text": "8"
                },
                {
                  "role": "out",
                  "text": "Das Rechteck mit a=5 und b=8 hat Umfang 26 und Fläche 40."
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Seite a:"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "Seite b:"
                },
                {
                  "role": "in",
                  "text": "100"
                },
                {
                  "role": "out",
                  "text": "Das Rechteck mit a=2 und b=100 hat Umfang 204 und Fläche 200."
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Seite a:"
                },
                {
                  "role": "in",
                  "text": "7"
                },
                {
                  "role": "out",
                  "text": "Seite b:"
                },
                {
                  "role": "in",
                  "text": "6"
                },
                {
                  "role": "out",
                  "text": "Das Rechteck mit a=7 und b=6 hat Umfang 26 und Fläche 42."
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "def umfang(a, b):\n    # TODO\n    return ...\n\ndef fläche(a, b):\n    # TODO\n    return ...\n\n# Dieser Code ist bereits fertig:\na = int(input(\"Seite a:\"))\nb = int(input(\"Seite b:\"))\nU = umfang(a, b)\nA = fläche(a, b)\nprint(f\"Das Rechteck mit a={a} und b={b} hat Umfang {U} und Fläche {A}.\")"
        },
        "deps": [
          10008
        ]
      }
    ],
    "x": 730,
    "y": 2730
  },
  {
    "id": 10009,
    "dirName": "080-neue-wege",
    "title": "8. Neue Wege",
    "originalTitle": "Neue Wege",
    "requiredCount": 2,
    "description": "# Neue Wege\r\n\r\n_Maria und Ellie entwickeln gemeinsam ein Programm zur Überwachung der Patroullie, Maria beschreibt die Regeln und Ellie übersetzt sie in Code._\r\n\r\n**Ellie**: Kannst du bitte nochmal die Regeln wiederholen? Wir fragen also `temperatur` und `windstärke` ab, und dann?  \r\n**Maria**: Die Temperatur darf nicht zu sehr sinken. Wenn die Temperatur unter -15°C fällt, müssen wir die Patroullie abbrechen. Aber auch wenn der Wind stärker ist als 40 km/h, müssen alle zurückkommen. Kriegst du das hin?  \r\n**Ellie**: Natürlich, einfach wieder ein `or`:\r\n\r\n```py\r\ntemperatur = int(input(\"Temperatur(°C): \"))\r\nwindstärke = int(input(\"Windstärke(km/h): \"))\r\n\r\nif temperatur < -15 or windstärke > 40:\r\n    print(\"Wetterwarnung, Patroullie sofort abbrechen!\")\r\nelse:\r\n    print(\"Alles in Ordnung\")\r\n```\r\n\r\n**Ellie**: Und Voila. Wenn eine der Bedingungen - oder beide - erfüllt sind, dann bricht die Patroullie ab.  \r\n**Maria**: Lass mich mal testen:\r\n\r\n```\r\nTemperatur(°C): -10\r\nWindstärke(km/h): 45\r\nWetterwarnung, Patroullie sofort abbrechen!\r\n```\r\n\r\n**Ellie**: Siehst du, genauso wie du es willst.  \r\n**Maria**: Hm, aber das reicht nicht ... kannst du bitte noch eine Bedingung einfügen? Wenn die Temperatur unter -5°C **und** die Windstärke größer als 20 km/h ist, dann ist es schon gefährlich da draußen - dann kürzen wir die Patroullie ab.  \r\n**Ellie**: Okay, aber das ist dann hoffentlich die letzte Änderung für heute. `elif` und `and`, kein Problem:\r\n\r\n```py\r\ntemperatur = int(input(\"Temperatur(°C): \"))\r\nwindstärke = int(input(\"Windstärke(km/h): \"))\r\n\r\nif temperatur < -15 or windstärke > 40:\r\n    print(\"Wetterwarnung, Patroullie sofort abbrechen!\")\r\nelif temperatur < -5 and windstärke > 20:\r\n    print(\"Schlecht Wetter, Patroullie abkürzen!\")\r\nelse:\r\n    print(\"Alles in Ordnung\")\r\n```\r\n\r\n**Ellie**: Zufrieden?  \r\n**Maria**: Hm, ja ... fast. Mir ist gerade noch was eingefallen. Wir müssen noch den Nebel berücksichtigen ...  \r\n**Ellie**: (seufzt und fährt sich durch die Haare) Nicht schon wieder, Maria. Immer wenn ich denke, es ist fertig, kommt noch etwas dazu! Fuck, scheiße - wir sitzen hier seit zwei Stunden! Kannst du dir nicht VORHER die beschissenen Regeln überlegen!?\r\n\r\n_Maria schaut verdutzt, und als Ellie ihre Worte realisiert, läuft sie rot an. Sie steht auf und verlässt die Zentrale ohne Maria anzuschauen. Maria folgt ihr auf den Balkon, wo sie mit verschränkten Armen in die Ferne starrt._\r\n\r\n**Maria**: (lehnt sich neben sie ans Geländer) Hey, der Code funktioniert übrigends super. Wirklich.  \r\n**Ellie**: (leise, ohne sie anzusehen) Sorry für vorhin. Das war ... übertrieben.  \r\n**Maria**: Es ist nicht der Nebel, oder? Irgendwas beschäftigt dich schon länger.  \r\n**Ellie**: (zögert) Es ist halt ... ich sitze da drin und du diktierst mir Regeln. Es fühlt sich an, als wäre ich nur eine Übersetzungsmaschine. Als hätte das alles nichts mit mir zu tun. (sie macht eine kurze Pause) Ach, vergiss es. Ist kompliziert.  \r\n**Maria**: Nein, ich glaube, ich weiß, was du meinst. Manchmal, wenn ich die Dienstpläne mache, geht es mir ähnlich. Dann vergesse ich für einen Moment, dass ich da gerade meine Freunde in die Kälte schicke. Man verliert sich in der Organisation und spürt nichts mehr dabei.\r\n\r\n_Ellie wendet zum ersten Mal den Kopf und sieht Maria direkt an. Ihr harter Blick wird weicher._\r\n\r\n**Ellie**: Vielleicht. Ich habe nachgedacht ... ich will etwas Eigenes anfangen. Ein Projekt.  \r\n**Maria**: (lächelt vorsichtig) Fürs Dorf?  \r\n**Ellie**: Nein. (schüttelt den Kopf) Nur für mich. Ich ... ich kann noch nicht darüber reden. Aber es ist wichtig für mich. Und dafür bräuchte ich den Laptop für mich alleine.  \r\n**Maria**: Aber, Ellie .. das Programm für die Patroullie ist überlebenswichtig. Einen zweiten Laptop finden wir schon, aber wer programmiert ihn?  \r\n**Ellie**: Ich weiß. Deshalb dachte ich ... ich kann dir zeigen, wie du selbst die Nebel-Abfrage einbaust. Es ist nicht schwer und du verstehst das sicher schnell. Dann kannst du deine Regeln so oft ändern, wie du Lust drauf hast.\r\n\r\n_Maria blickt überrascht, sie denkt einen Moment nach, dann hellt sich ihr Gesicht auf._\r\n\r\n**Maria**: Haha, dann wären wir schon zu zweit?  \r\n**Ellie**: Zwei Programmiererinnen ...  \r\n**Maria**: ... retten die Welt!  \r\n**Ellie**: Huray!\r\n\r\n_Die beiden verbringen noch eine Weile auf dem Balkon und genießen die Aussicht auf die Berge, bevor sie sich wieder mit Python beschäftigen._\r\n",
    "image": "/story/patrol.jpg",
    "quests": [
      {
        "filename": "a__Patroullie_1.json",
        "x": 200,
        "y": -40,
        "id": 131,
        "content": {
          "version": "v1",
          "title": "a) Patroullie 1",
          "description": "Die neue Version der Wetterwarnung fragt nach der Sichtweite und der Windstärke. Wenn die Sicht geringer ist als 100 Meter **oder** der Wind stärker als 35 km/h, dann gib eine Wetterwarnung aus.\n\nFülle Zeile 4 mit der Bedingung aus.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "1000"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Alles gut"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "Wetterwarnung! Alle Teams zurück!"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "500"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "Wetterwarnung! Alle Teams zurück!"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "60"
                },
                {
                  "role": "out",
                  "text": "Wetterwarnung! Alle Teams zurück!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "sicht = int(input(\"Sicht (m):\"))\nwind = int(input(\"Wind (km/h):\"))\n\nif ...:\n    print(\"Wetterwarnung! Alle Teams zurück!\")\nelse:\n    print(\"Alles gut\")"
        },
        "deps": [
          10009
        ]
      },
      {
        "filename": "b__Patroullie_2.json",
        "x": 360,
        "y": -115,
        "id": 132,
        "content": {
          "version": "v1",
          "title": "b) Patroullie 2",
          "description": "Wenn die Sicht geringer ist als 500 Meter **und** der Wind stärker ist als 25 km/h, dann werden die Routen verkürzt.\n\nErgänze Zeile 6 mit einer passenden Bedingung.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "400"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "30"
                },
                {
                  "role": "out",
                  "text": "Gefahr! Heute nur kurze Route!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "5000"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "0"
                },
                {
                  "role": "out",
                  "text": "Alles gut"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "0"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "50"
                },
                {
                  "role": "out",
                  "text": "Wetterwarnung! Alle Teams zurück!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "sicht = int(input(\"Sicht (m):\"))\nwind = int(input(\"Wind (km/h):\"))\n\nif sicht < 100 or wind > 35:\n    print(\"Wetterwarnung! Alle Teams zurück!\")\nelif ...: \n    print(\"Gefahr! Heute nur kurze Route!\")\nelse:\n    print(\"Alles gut\")"
        },
        "deps": [
          10009
        ]
      },
      {
        "filename": "c__Patroullie_3.json",
        "x": 530,
        "y": -40,
        "id": 133,
        "content": {
          "version": "v1",
          "title": "c) Patroullie 3",
          "description": "Und jetzt alles zusammen!\n\n- Die Wetterwarnung gilt auch, wenn die Temperatur unter -20°C fällt (unabhängig von den anderen Werten)\n- Eine kurze Route gilt auch, wenn die Temperatur unter -10°C fällt und der Wind stärker ist als 20 km/h. Nutze eine neue `elif` oder mische `and` und `or`.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "1000"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "15"
                },
                {
                  "role": "out",
                  "text": "Temperatur (°C):"
                },
                {
                  "role": "in",
                  "text": "-25"
                },
                {
                  "role": "out",
                  "text": "Wetterwarnung! Alle Teams zurück!"
                }
              ]
            },
            {
              "title": "Chat 2",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "2000"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "22"
                },
                {
                  "role": "out",
                  "text": "Temperatur (°C):"
                },
                {
                  "role": "in",
                  "text": "-13"
                },
                {
                  "role": "out",
                  "text": "Gefahr! Heute nur kurze Route!"
                }
              ]
            },
            {
              "title": "Chat 3",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "400"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "30"
                },
                {
                  "role": "out",
                  "text": "Temperatur (°C):"
                },
                {
                  "role": "in",
                  "text": "0"
                },
                {
                  "role": "out",
                  "text": "Gefahr! Heute nur kurze Route!"
                }
              ]
            },
            {
              "title": "Chat 4",
              "messages": [
                {
                  "role": "out",
                  "text": "Sicht (m):"
                },
                {
                  "role": "in",
                  "text": "2000"
                },
                {
                  "role": "out",
                  "text": "Wind (km/h):"
                },
                {
                  "role": "in",
                  "text": "4"
                },
                {
                  "role": "out",
                  "text": "Temperatur (°C):"
                },
                {
                  "role": "in",
                  "text": "13"
                },
                {
                  "role": "out",
                  "text": "Alles gut"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": "sicht = int(input(\"Sicht (m):\"))\nwind = int(input(\"Wind (km/h):\"))\ntemperatur = int(input(\"Temperatur (°C):\"))\n\nif sicht < 100 or wind > 35:\n    print(\"Wetterwarnung! Alle Teams zurück!\")\nelif sicht < 500 and wind > 25: \n    print(\"Gefahr! Heute nur kurze Route!\")\nelse:\n    print(\"Alles gut\")"
        },
        "deps": [
          10009
        ]
      },
      {
        "filename": "d__Begegnung.json",
        "x": 420,
        "y": 134,
        "id": 134,
        "content": {
          "version": "v1",
          "title": "d) Begegnung",
          "description": "Für Begegnungen mit Infizierten gibt es klare Regeln. Deine Reaktion hängt von der Anzahl der Gegner und ihrer Entfernung ab.\n\n**Regel:** Wenn mehr als 5 Infizierte da sind **oder** die Gruppe näher als 10 Meter ist, musst du fliehen. Ansonsten stellst du dich dem Kampf.\n\nFrage die Werte ab und schreibe eine `if`-Abfrage.",
          "tasks": [],
          "lng": "de",
          "editOptions": "python-pro-only",
          "questScript": "",
          "chats": [
            {
              "title": "Chat 1: Zu viele",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl Infizierte:"
                },
                {
                  "role": "in",
                  "text": "8"
                },
                {
                  "role": "out",
                  "text": "Entfernung (m):"
                },
                {
                  "role": "in",
                  "text": "20"
                },
                {
                  "role": "out",
                  "text": "Rennen!"
                }
              ]
            },
            {
              "title": "Chat 2: Zu nah",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl Infizierte:"
                },
                {
                  "role": "in",
                  "text": "2"
                },
                {
                  "role": "out",
                  "text": "Entfernung (m):"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Rennen!"
                }
              ]
            },
            {
              "title": "Chat 3: Kampf",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl Infizierte:"
                },
                {
                  "role": "in",
                  "text": "3"
                },
                {
                  "role": "out",
                  "text": "Entfernung (m):"
                },
                {
                  "role": "in",
                  "text": "15"
                },
                {
                  "role": "out",
                  "text": "Kämpfen!"
                }
              ]
            },
            {
              "title": "Chat 4: Grenzfall",
              "messages": [
                {
                  "role": "out",
                  "text": "Anzahl Infizierte:"
                },
                {
                  "role": "in",
                  "text": "5"
                },
                {
                  "role": "out",
                  "text": "Entfernung (m):"
                },
                {
                  "role": "in",
                  "text": "10"
                },
                {
                  "role": "out",
                  "text": "Kämpfen!"
                }
              ]
            }
          ],
          "language": "python-pro",
          "program": ""
        },
        "deps": [
          10009
        ]
      }
    ],
    "x": 380,
    "y": 2570
  },
  {
    "id": 10010,
    "dirName": "090-epilog",
    "title": "9. Epilog",
    "originalTitle": "Epilog",
    "requiredCount": -1,
    "description": "# Epilog\r\n\r\n_Ellie und Joel sitzen vor dem Laptop und spielen ein Spiel, das Ellie über die letzten Monate entwickelt hat._\r\n\r\n**Ellie**: Vergiss nicht mit K, L und M anzugreifen!  \r\n**Joel**: Ich geb mein Bestes! Ha, erwischt!  \r\n**Ellie**: Freu dich nicht zu früh!\r\n\r\n_Sie spielen eine Weile, bis plötzlich das Spiel mit einer Fehlermeldung abstürzt._\r\n\r\n**Joel**: Was ist passiert? Habe ich was kaputt gemacht?  \r\n**Ellie**: Verdammt. Nein, ist nicht deine Schuld. Das ist dieser Bug, an dem ich seit paar Tagen sitze. Welche Tasten hast du gedrückt, kurz bevor es abgestürzt ist?  \r\n**Joel**: Ähm, ich glaube erst nach links und dann ganz oft K.  \r\n**Ellie**: Scheiße, es ist so schwer, den Bug zu finden! (atmet tief durch) Aber ich krieg das hin.  \r\n**Joel**: Aufgeben war noch nie deins, oder?  \r\n**Ellie**: Nein, niemals. Lust auf eine weitere Runde? Vielleicht finden wir heraus, was den Fehler verursacht.\r\n\r\n_Joel nickt, Ellie startet das Spiel neu. Sie spielen konzentriert, doch nach kurzer Zeit kommt wieder eine Fehlermeldung._\r\n\r\n**Ellie**: (frustriert) Nicht schon wieder! Okay, für heute reicht's mir mit dem Testen.  \r\n**Joel**: (lehnt sicht zurück) Schon verrückt. Vor drei Monaten hast du damit angefangen und bist jetzt schon so weit. Ich hätte aber auch nicht erwartet, wie viel Arbeit es wirklich ist, so ein Spiel zu programmieren.  \r\n**Ellie**: Was du nicht sagst. Aber wenn man mal drin ist, wird es einfacher. Dann geht es vor allem darum, dranzubleiben und nicht aufzugeben.  \r\n**Joel**: Und wie bist du ausgerechnet darauf gekommen, Mortal Kombat nachzubauen? Das Spiel ist doch steinalt.  \r\n**Ellie** Sagen wir so .. es erinnert mich an jemanden. Das ist alles.\r\n\r\n_Joel nickt verständnisvoll. Nach einer kurzen Stille steht er auf._\r\n\r\n**Joel**: Ähm, dann lasse ich dich mal weiter tüfteln. Und falls du weiter Testen möchtest ...  \r\n**Ellie**: Wir werden noch viel gemeinsam Testen!\r\n\r\n<div class=\"text-center\">\\~\\~\\~ ENDE \\~\\~\\~</div>\r\n",
    "image": "/story/stage.jpg",
    "quests": [],
    "x": 180,
    "y": 2850
  }
]

// Generate chaptersMap based on chapter information
export const chaptersMap: {
  [key: number]: OverviewMapData
} = {}

export const chapterOverviewData: {
  title: string
  titleEn: string
  quests: number[]
}[] = []

// Generate chapterQuests based on chapter information
export const chapterQuests: { [key: number]: QuestData } = {}

// Generate chapterData based on chapter information
export const chapterData: { [key: number]: { title: string, description: string, image: string, requiredCount: number } } = {}

// Populate the exported objects
chapterInfo.forEach((chapter) => {
  // Add chapter to chapterData
  chapterData[chapter.id] = {
    title: chapter.title,
    description: chapter.description,
    image: chapter.image,
    requiredCount: chapter.requiredCount,
  }

  // Default chapter position and dependencies
  chaptersMap[chapter.id] = {
    x: chapter.x,
    y: chapter.y,
    deps: chapter.id == 10001 ? []  : [chapter.id - 1],
  }
  
  const title = `${chapter.title}`

  const c = {
    title,
    titleEn: title,
    quests: [] as number[],
  }

  // Add quests from this chapter to chapterQuests
  chapter.quests.forEach((quest) => {
    const questId = quest.id
    chapterQuests[questId] = deserializeQuestToData(quest.content as any)
    chaptersMap[questId] = {
      x: quest.x,
      y: quest.y + chapter.y,
      deps: quest.deps,
      chapter: chapter.id,
    }
    c.quests.push(questId)
  })
  chapterOverviewData.push(c)
})
