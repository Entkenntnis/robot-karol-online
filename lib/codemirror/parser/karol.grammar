@top Program {
  (expression | Cmd)*
}

expression {
  Command |
  Repeat |
  IfThen |
  CustomRef |
  Return
}

@external specialize {idx} keywords from "./keywords" {
  Return,
  RepeatStart[closedBy="RepeatEnd"],
  RepeatEnd,
  RepeatWhileKey,
  RepeatTimesKey,
  RepeatAlwaysKey,
  IfKey[closedBy="IfEndKey"],
  ThenKey,
  IfEndKey,
  ElseKey,
  CmdStart[closedBy="CmdEnd"],
  CmdEnd,
  KarolPrefix,
  ConditionWithoutParam,
  ConditionMaybeWithParam,
  CommandWithParameter
  CommandPure
}

Command {
  (KarolPrefix ".")? ((CommandPure (openPar closePar)?) | (CommandWithParameter (openPar Parameter? closePar)?))
}

Repeat {
  RepeatStart ((RepeatWhileKey Condition) | (Times RepeatTimesKey) | RepeatAlwaysKey) expression* RepeatEnd
}

Parameter {
  number
}

Times {
  number
}

Condition {
  ConditionWithoutParam |
  ConditionMaybeWithParam |
  (ConditionMaybeWithParam openPar Parameter closePar)
}

IfThen {
  IfKey Condition ThenKey expression* (ElseKey expression*)? IfEndKey
}

Cmd {
  CmdStart CmdName expression* CmdEnd
}

CmdName {
  idx
}

CustomRef { idx }

@tokens {
  "."

  openPar { "(" }

  closePar { ")" }

  whitespace { $[ \n\r\t]+ }

  number { $[0-9]+ }

  idx { $[0-9A-Za-zäüöÄÜÖß_]+ }

  @precedence { number, idx }

  LineComment { "//" ![\n]* }

  PythonComment { "#" ![\n]* }

  BlockComment { "/*" blockCommentRest }

  blockCommentRest { ![*] blockCommentRest | "*" blockCommentAfterStar }

  blockCommentAfterStar { "/" | "*" blockCommentAfterStar | ![/*] blockCommentRest }
}

@external tokens nestedComment from "./nestedComment" { Comment }

@skip { Comment | whitespace | LineComment | PythonComment | BlockComment | ";" }