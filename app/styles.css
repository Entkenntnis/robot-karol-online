.background-element {
  background-image: url('/canvas_background.jpg'); /* Fallback */
}

/* temporary, should be fixed in upstream soon */
#blocklyArea path,
#blocklyArea g {
  outline: none !important; /* Prevent outline on focus */
}

/* integrate Re-Flex styles */
/*/////////////////////////////////////////////////////////
// Document body to handle resizing 
// See: https://github.com/leefsmp/Re-Flex/issues/68
/////////////////////////////////////////////////////////*/
body.reflex-col-resize {
  cursor: col-resize;
}

body.reflex-row-resize {
  cursor: row-resize;
}

/*/////////////////////////////////////////////////////////
// Re-Flex Container
//
/////////////////////////////////////////////////////////*/
.reflex-container {
  justify-content: flex-start; /* align items in Main Axis */
  align-items: stretch; /* align items in Cross Axis */
  align-content: stretch;
  display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box; /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox; /* TWEENER - IE 10 */
  display: -webkit-flex; /* NEW - Chrome */
  display: flex;
  position: relative;

  height: 100%;
  width: 100%;
}

.reflex-container.horizontal {
  flex-direction: column;
  min-height: 1px;
}

.reflex-container.vertical {
  flex-direction: row;
  min-width: 1px;
}

/*/////////////////////////////////////////////////////////
//Re-Flex Element
//
/////////////////////////////////////////////////////////*/
.reflex-container > .reflex-element {
  position: relative;
  overflow: auto;
  height: 100%;
  width: 100%;
}

.reflex-container.reflex-resizing > .reflex-element {
  pointer-events: none;
  user-select: none;
}

.reflex-container > .reflex-element > .reflex-size-aware {
  height: 100%;
  width: 100%;
}

/*/////////////////////////////////////////////////////////
//Re-Flex Splitter
//
/////////////////////////////////////////////////////////*/
.reflex-container > .reflex-splitter {
  background-color: #eeeeee;
  z-index: 100;
}

.reflex-container > .reflex-splitter.active,
.reflex-container > .reflex-splitter:hover {
  background-color: #c6c6c6;
  transition: all 1s ease;
}

.horizontal > .reflex-splitter {
  border-bottom: 1px solid #c6c6c6;
  border-top: 1px solid #c6c6c6;
  cursor: row-resize;
  width: 100%;
  height: 2px;
}

.reflex-element.horizontal .reflex-handle {
  cursor: row-resize;
  user-select: none;
}

.reflex-container.horizontal > .reflex-splitter:hover,
.reflex-container.horizontal > .reflex-splitter.active {
  border-bottom: 1px solid #eeeeee;
  border-top: 1px solid #eeeeee;
}

.reflex-container.vertical > .reflex-splitter {
  border-right: 1px solid #c6c6c6;
  border-left: 1px solid #c6c6c6;
  cursor: col-resize;
  height: 100%;
  width: 2px;
}

.reflex-element.vertical .reflex-handle {
  cursor: col-resize;
  user-select: none;
}

.reflex-container.vertical > .reflex-splitter:hover,
.reflex-container.vertical > .reflex-splitter.active {
  border-right: 1px solid #eeeeee;
  border-left: 1px solid #eeeeee;
}
